2017-03-13 11:49:34 [root@beaglebone /home/debian/Beaglebone-Lil-Motor-C-Lib/06-pid-with-fwd-horizon] 
# python twiddle.py
Welcome!
Current local time and date: Mon Mar 13 11:49:40 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d00000
 ctrladdr_CPU_wants_data : 0xb6d00000
 ctrladdr_PRU_data_ready : 0xb6d00004
 ctrladdr_CPU_new_sched  : 0xb6d00008
 ctrladdr_PRU_ack_sched  : 0xb6d0000c
 ctrladdr_CPU_new_period    : 0xb6d00010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d00014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d00018
 ctrladdr_SAMPLE_NUM        : 0xb6d0001c
 ctrladdr_cycle_count_req   : 0xb6d00020
 ctrladdr_cycle_count        : 0xb6d00024
 addr_cpu_data_buf : 0xb6d00028
 addr_pru_data_buf : 0xb6d00428
 addr_cpu_cmd_buf  : 0xb6d00828
 addr_pru_cmd_buf  : 0xb6d00a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.083000 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('===========================niter,dp,sum(dp):', 0, [0.01, 0.01, 0.0002], 0.0202)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.083, -0.056, -0.0006])
Current local time and date: Mon Mar 13 11:49:44 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d9c000
 ctrladdr_CPU_wants_data : 0xb6d9c000
 ctrladdr_PRU_data_ready : 0xb6d9c004
 ctrladdr_CPU_new_sched  : 0xb6d9c008
 ctrladdr_PRU_ack_sched  : 0xb6d9c00c
 ctrladdr_CPU_new_period    : 0xb6d9c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d9c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d9c018
 ctrladdr_SAMPLE_NUM        : 0xb6d9c01c
 ctrladdr_cycle_count_req   : 0xb6d9c020
 ctrladdr_cycle_count        : 0xb6d9c024
 addr_cpu_data_buf : 0xb6d9c028
 addr_pru_data_buf : 0xb6d9c428
 addr_cpu_cmd_buf  : 0xb6d9c828
 addr_pru_cmd_buf  : 0xb6d9ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.073000 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 126.66129088127275)
Current local time and date: Mon Mar 13 11:49:48 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d59000
 ctrladdr_CPU_wants_data : 0xb6d59000
 ctrladdr_PRU_data_ready : 0xb6d59004
 ctrladdr_CPU_new_sched  : 0xb6d59008
 ctrladdr_PRU_ack_sched  : 0xb6d5900c
 ctrladdr_CPU_new_period    : 0xb6d59010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d59014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d59018
 ctrladdr_SAMPLE_NUM        : 0xb6d5901c
 ctrladdr_cycle_count_req   : 0xb6d59020
 ctrladdr_cycle_count        : 0xb6d59024
 addr_cpu_data_buf : 0xb6d59028
 addr_pru_data_buf : 0xb6d59428
 addr_cpu_cmd_buf  : 0xb6d59828
 addr_pru_cmd_buf  : 0xb6d59a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 104.96682203548008)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.056, -0.0006])
Current local time and date: Mon Mar 13 11:49:52 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd9000
 ctrladdr_CPU_wants_data : 0xb6cd9000
 ctrladdr_PRU_data_ready : 0xb6cd9004
 ctrladdr_CPU_new_sched  : 0xb6cd9008
 ctrladdr_PRU_ack_sched  : 0xb6cd900c
 ctrladdr_CPU_new_period    : 0xb6cd9010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd9014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd9018
 ctrladdr_SAMPLE_NUM        : 0xb6cd901c
 ctrladdr_cycle_count_req   : 0xb6cd9020
 ctrladdr_cycle_count        : 0xb6cd9024
 addr_cpu_data_buf : 0xb6cd9028
 addr_pru_data_buf : 0xb6cd9428
 addr_cpu_cmd_buf  : 0xb6cd9828
 addr_pru_cmd_buf  : 0xb6cd9a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.046000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 144.24628392019983)
Current local time and date: Mon Mar 13 11:49:55 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d0a000
 ctrladdr_CPU_wants_data : 0xb6d0a000
 ctrladdr_PRU_data_ready : 0xb6d0a004
 ctrladdr_CPU_new_sched  : 0xb6d0a008
 ctrladdr_PRU_ack_sched  : 0xb6d0a00c
 ctrladdr_CPU_new_period    : 0xb6d0a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d0a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d0a018
 ctrladdr_SAMPLE_NUM        : 0xb6d0a01c
 ctrladdr_cycle_count_req   : 0xb6d0a020
 ctrladdr_cycle_count        : 0xb6d0a024
 addr_cpu_data_buf : 0xb6d0a028
 addr_pru_data_buf : 0xb6d0a428
 addr_cpu_cmd_buf  : 0xb6d0a828
 addr_pru_cmd_buf  : 0xb6d0aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.066000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 116.06295369006718)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.056, -0.0006])
Current local time and date: Mon Mar 13 11:49:59 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d57000
 ctrladdr_CPU_wants_data : 0xb6d57000
 ctrladdr_PRU_data_ready : 0xb6d57004
 ctrladdr_CPU_new_sched  : 0xb6d57008
 ctrladdr_PRU_ack_sched  : 0xb6d5700c
 ctrladdr_CPU_new_period    : 0xb6d57010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d57014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d57018
 ctrladdr_SAMPLE_NUM        : 0xb6d5701c
 ctrladdr_cycle_count_req   : 0xb6d57020
 ctrladdr_cycle_count        : 0xb6d57024
 addr_cpu_data_buf : 0xb6d57028
 addr_pru_data_buf : 0xb6d57428
 addr_cpu_cmd_buf  : 0xb6d57828
 addr_pru_cmd_buf  : 0xb6d57a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000400 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 121.54496759150382)
Current local time and date: Mon Mar 13 11:50:05 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d58000
 ctrladdr_CPU_wants_data : 0xb6d58000
 ctrladdr_PRU_data_ready : 0xb6d58004
 ctrladdr_CPU_new_sched  : 0xb6d58008
 ctrladdr_PRU_ack_sched  : 0xb6d5800c
 ctrladdr_CPU_new_period    : 0xb6d58010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d58014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d58018
 ctrladdr_SAMPLE_NUM        : 0xb6d5801c
 ctrladdr_cycle_count_req   : 0xb6d58020
 ctrladdr_cycle_count        : 0xb6d58024
 addr_cpu_data_buf : 0xb6d58028
 addr_pru_data_buf : 0xb6d58428
 addr_cpu_cmd_buf  : 0xb6d58828
 addr_pru_cmd_buf  : 0xb6d58a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000800 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 125.119947312943)
('===========================niter,dp,sum(dp):', 0, [0.011000000000000001, 0.009000000000000001, 0.00018], 0.020180000000000003)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.056, -0.0006])
Current local time and date: Mon Mar 13 11:50:09 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d7c000
 ctrladdr_CPU_wants_data : 0xb6d7c000
 ctrladdr_PRU_data_ready : 0xb6d7c004
 ctrladdr_CPU_new_sched  : 0xb6d7c008
 ctrladdr_PRU_ack_sched  : 0xb6d7c00c
 ctrladdr_CPU_new_period    : 0xb6d7c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d7c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d7c018
 ctrladdr_SAMPLE_NUM        : 0xb6d7c01c
 ctrladdr_cycle_count_req   : 0xb6d7c020
 ctrladdr_cycle_count        : 0xb6d7c024
 addr_cpu_data_buf : 0xb6d7c028
 addr_pru_data_buf : 0xb6d7c428
 addr_cpu_cmd_buf  : 0xb6d7c828
 addr_pru_cmd_buf  : 0xb6d7ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.082000 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 120.25032829241235)
Current local time and date: Mon Mar 13 11:50:13 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8f000
 ctrladdr_CPU_wants_data : 0xb6d8f000
 ctrladdr_PRU_data_ready : 0xb6d8f004
 ctrladdr_CPU_new_sched  : 0xb6d8f008
 ctrladdr_PRU_ack_sched  : 0xb6d8f00c
 ctrladdr_CPU_new_period    : 0xb6d8f010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8f014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8f018
 ctrladdr_SAMPLE_NUM        : 0xb6d8f01c
 ctrladdr_cycle_count_req   : 0xb6d8f020
 ctrladdr_cycle_count        : 0xb6d8f024
 addr_cpu_data_buf : 0xb6d8f028
 addr_pru_data_buf : 0xb6d8f428
 addr_cpu_cmd_buf  : 0xb6d8f828
 addr_pru_cmd_buf  : 0xb6d8fa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.104000 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 365.73461031553597)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.056, -0.0006])
Current local time and date: Mon Mar 13 11:50:16 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d1a000
 ctrladdr_CPU_wants_data : 0xb6d1a000
 ctrladdr_PRU_data_ready : 0xb6d1a004
 ctrladdr_CPU_new_sched  : 0xb6d1a008
 ctrladdr_PRU_ack_sched  : 0xb6d1a00c
 ctrladdr_CPU_new_period    : 0xb6d1a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d1a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d1a018
 ctrladdr_SAMPLE_NUM        : 0xb6d1a01c
 ctrladdr_cycle_count_req   : 0xb6d1a020
 ctrladdr_cycle_count        : 0xb6d1a024
 addr_cpu_data_buf : 0xb6d1a028
 addr_pru_data_buf : 0xb6d1a428
 addr_cpu_cmd_buf  : 0xb6d1a828
 addr_pru_cmd_buf  : 0xb6d1aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.047000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 165.50296325038929)
Current local time and date: Mon Mar 13 11:50:20 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce6000
 ctrladdr_CPU_wants_data : 0xb6ce6000
 ctrladdr_PRU_data_ready : 0xb6ce6004
 ctrladdr_CPU_new_sched  : 0xb6ce6008
 ctrladdr_PRU_ack_sched  : 0xb6ce600c
 ctrladdr_CPU_new_period    : 0xb6ce6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce6018
 ctrladdr_SAMPLE_NUM        : 0xb6ce601c
 ctrladdr_cycle_count_req   : 0xb6ce6020
 ctrladdr_cycle_count        : 0xb6ce6024
 addr_cpu_data_buf : 0xb6ce6028
 addr_pru_data_buf : 0xb6ce6428
 addr_cpu_cmd_buf  : 0xb6ce6828
 addr_pru_cmd_buf  : 0xb6ce6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.065000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 112.0972398344116)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.056, -0.0006])
Current local time and date: Mon Mar 13 11:50:24 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da5000
 ctrladdr_CPU_wants_data : 0xb6da5000
 ctrladdr_PRU_data_ready : 0xb6da5004
 ctrladdr_CPU_new_sched  : 0xb6da5008
 ctrladdr_PRU_ack_sched  : 0xb6da500c
 ctrladdr_CPU_new_period    : 0xb6da5010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da5014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da5018
 ctrladdr_SAMPLE_NUM        : 0xb6da501c
 ctrladdr_cycle_count_req   : 0xb6da5020
 ctrladdr_cycle_count        : 0xb6da5024
 addr_cpu_data_buf : 0xb6da5028
 addr_pru_data_buf : 0xb6da5428
 addr_cpu_cmd_buf  : 0xb6da5828
 addr_pru_cmd_buf  : 0xb6da5a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000420 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 110.16573940550657)
Current local time and date: Mon Mar 13 11:50:28 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da6000
 ctrladdr_CPU_wants_data : 0xb6da6000
 ctrladdr_PRU_data_ready : 0xb6da6004
 ctrladdr_CPU_new_sched  : 0xb6da6008
 ctrladdr_PRU_ack_sched  : 0xb6da600c
 ctrladdr_CPU_new_period    : 0xb6da6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da6018
 ctrladdr_SAMPLE_NUM        : 0xb6da601c
 ctrladdr_cycle_count_req   : 0xb6da6020
 ctrladdr_cycle_count        : 0xb6da6024
 addr_cpu_data_buf : 0xb6da6028
 addr_pru_data_buf : 0xb6da6428
 addr_cpu_cmd_buf  : 0xb6da6828
 addr_pru_cmd_buf  : 0xb6da6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000780 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 121.71171155843562)
('===========================niter,dp,sum(dp):', 0, [0.0099, 0.008100000000000001, 0.000162], 0.018162)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.056, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:50:31 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc3000
 ctrladdr_CPU_wants_data : 0xb6dc3000
 ctrladdr_PRU_data_ready : 0xb6dc3004
 ctrladdr_CPU_new_sched  : 0xb6dc3008
 ctrladdr_PRU_ack_sched  : 0xb6dc300c
 ctrladdr_CPU_new_period    : 0xb6dc3010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc3014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc3018
 ctrladdr_SAMPLE_NUM        : 0xb6dc301c
 ctrladdr_cycle_count_req   : 0xb6dc3020
 ctrladdr_cycle_count        : 0xb6dc3024
 addr_cpu_data_buf : 0xb6dc3028
 addr_pru_data_buf : 0xb6dc3428
 addr_cpu_cmd_buf  : 0xb6dc3828
 addr_pru_cmd_buf  : 0xb6dc3a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.083100 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 120.51094821897149)
Current local time and date: Mon Mar 13 11:50:35 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d90000
 ctrladdr_CPU_wants_data : 0xb6d90000
 ctrladdr_PRU_data_ready : 0xb6d90004
 ctrladdr_CPU_new_sched  : 0xb6d90008
 ctrladdr_PRU_ack_sched  : 0xb6d9000c
 ctrladdr_CPU_new_period    : 0xb6d90010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d90014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d90018
 ctrladdr_SAMPLE_NUM        : 0xb6d9001c
 ctrladdr_cycle_count_req   : 0xb6d90020
 ctrladdr_cycle_count        : 0xb6d90024
 addr_cpu_data_buf : 0xb6d90028
 addr_pru_data_buf : 0xb6d90428
 addr_cpu_cmd_buf  : 0xb6d90828
 addr_pru_cmd_buf  : 0xb6d90a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.102900 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 119.7442138887241)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.056, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:50:39 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d18000
 ctrladdr_CPU_wants_data : 0xb6d18000
 ctrladdr_PRU_data_ready : 0xb6d18004
 ctrladdr_CPU_new_sched  : 0xb6d18008
 ctrladdr_PRU_ack_sched  : 0xb6d1800c
 ctrladdr_CPU_new_period    : 0xb6d18010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d18014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d18018
 ctrladdr_SAMPLE_NUM        : 0xb6d1801c
 ctrladdr_cycle_count_req   : 0xb6d18020
 ctrladdr_cycle_count        : 0xb6d18024
 addr_cpu_data_buf : 0xb6d18028
 addr_pru_data_buf : 0xb6d18428
 addr_cpu_cmd_buf  : 0xb6d18828
 addr_pru_cmd_buf  : 0xb6d18a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.047900 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 108.0962589651933)
Current local time and date: Mon Mar 13 11:50:43 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d81000
 ctrladdr_CPU_wants_data : 0xb6d81000
 ctrladdr_PRU_data_ready : 0xb6d81004
 ctrladdr_CPU_new_sched  : 0xb6d81008
 ctrladdr_PRU_ack_sched  : 0xb6d8100c
 ctrladdr_CPU_new_period    : 0xb6d81010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d81014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d81018
 ctrladdr_SAMPLE_NUM        : 0xb6d8101c
 ctrladdr_cycle_count_req   : 0xb6d81020
 ctrladdr_cycle_count        : 0xb6d81024
 addr_cpu_data_buf : 0xb6d81028
 addr_pru_data_buf : 0xb6d81428
 addr_cpu_cmd_buf  : 0xb6d81828
 addr_pru_cmd_buf  : 0xb6d81a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.064100 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 114.46680245775312)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.056, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:50:47 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d49000
 ctrladdr_CPU_wants_data : 0xb6d49000
 ctrladdr_PRU_data_ready : 0xb6d49004
 ctrladdr_CPU_new_sched  : 0xb6d49008
 ctrladdr_PRU_ack_sched  : 0xb6d4900c
 ctrladdr_CPU_new_period    : 0xb6d49010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d49014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d49018
 ctrladdr_SAMPLE_NUM        : 0xb6d4901c
 ctrladdr_cycle_count_req   : 0xb6d49020
 ctrladdr_cycle_count        : 0xb6d49024
 addr_cpu_data_buf : 0xb6d49028
 addr_pru_data_buf : 0xb6d49428
 addr_cpu_cmd_buf  : 0xb6d49828
 addr_pru_cmd_buf  : 0xb6d49a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000438 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 115.59351701395714)
Current local time and date: Mon Mar 13 11:50:50 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d9e000
 ctrladdr_CPU_wants_data : 0xb6d9e000
 ctrladdr_PRU_data_ready : 0xb6d9e004
 ctrladdr_CPU_new_sched  : 0xb6d9e008
 ctrladdr_PRU_ack_sched  : 0xb6d9e00c
 ctrladdr_CPU_new_period    : 0xb6d9e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d9e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d9e018
 ctrladdr_SAMPLE_NUM        : 0xb6d9e01c
 ctrladdr_cycle_count_req   : 0xb6d9e020
 ctrladdr_cycle_count        : 0xb6d9e024
 addr_cpu_data_buf : 0xb6d9e028
 addr_pru_data_buf : 0xb6d9e428
 addr_cpu_cmd_buf  : 0xb6d9e828
 addr_pru_cmd_buf  : 0xb6d9ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000762 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 119.62412935290862)
('===========================niter,dp,sum(dp):', 0, [0.008910000000000001, 0.007290000000000001, 0.00014580000000000002], 0.016345800000000004)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.056, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:50:54 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6db4000
 ctrladdr_CPU_wants_data : 0xb6db4000
 ctrladdr_PRU_data_ready : 0xb6db4004
 ctrladdr_CPU_new_sched  : 0xb6db4008
 ctrladdr_PRU_ack_sched  : 0xb6db400c
 ctrladdr_CPU_new_period    : 0xb6db4010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6db4014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6db4018
 ctrladdr_SAMPLE_NUM        : 0xb6db401c
 ctrladdr_cycle_count_req   : 0xb6db4020
 ctrladdr_cycle_count        : 0xb6db4024
 addr_cpu_data_buf : 0xb6db4028
 addr_pru_data_buf : 0xb6db4428
 addr_cpu_cmd_buf  : 0xb6db4828
 addr_pru_cmd_buf  : 0xb6db4a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.084090 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 115.81181598987156)
Current local time and date: Mon Mar 13 11:50:58 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2a000
 ctrladdr_CPU_wants_data : 0xb6d2a000
 ctrladdr_PRU_data_ready : 0xb6d2a004
 ctrladdr_CPU_new_sched  : 0xb6d2a008
 ctrladdr_PRU_ack_sched  : 0xb6d2a00c
 ctrladdr_CPU_new_period    : 0xb6d2a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2a018
 ctrladdr_SAMPLE_NUM        : 0xb6d2a01c
 ctrladdr_cycle_count_req   : 0xb6d2a020
 ctrladdr_cycle_count        : 0xb6d2a024
 addr_cpu_data_buf : 0xb6d2a028
 addr_pru_data_buf : 0xb6d2a428
 addr_cpu_cmd_buf  : 0xb6d2a828
 addr_pru_cmd_buf  : 0xb6d2aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.101910 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 353.14472409232405)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.056, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:51:02 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d5c000
 ctrladdr_CPU_wants_data : 0xb6d5c000
 ctrladdr_PRU_data_ready : 0xb6d5c004
 ctrladdr_CPU_new_sched  : 0xb6d5c008
 ctrladdr_PRU_ack_sched  : 0xb6d5c00c
 ctrladdr_CPU_new_period    : 0xb6d5c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d5c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d5c018
 ctrladdr_SAMPLE_NUM        : 0xb6d5c01c
 ctrladdr_cycle_count_req   : 0xb6d5c020
 ctrladdr_cycle_count        : 0xb6d5c024
 addr_cpu_data_buf : 0xb6d5c028
 addr_pru_data_buf : 0xb6d5c428
 addr_cpu_cmd_buf  : 0xb6d5c828
 addr_pru_cmd_buf  : 0xb6d5ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.048710 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 111.45033709090148)
Current local time and date: Mon Mar 13 11:51:06 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d98000
 ctrladdr_CPU_wants_data : 0xb6d98000
 ctrladdr_PRU_data_ready : 0xb6d98004
 ctrladdr_CPU_new_sched  : 0xb6d98008
 ctrladdr_PRU_ack_sched  : 0xb6d9800c
 ctrladdr_CPU_new_period    : 0xb6d98010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d98014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d98018
 ctrladdr_SAMPLE_NUM        : 0xb6d9801c
 ctrladdr_cycle_count_req   : 0xb6d98020
 ctrladdr_cycle_count        : 0xb6d98024
 addr_cpu_data_buf : 0xb6d98028
 addr_pru_data_buf : 0xb6d98428
 addr_cpu_cmd_buf  : 0xb6d98828
 addr_pru_cmd_buf  : 0xb6d98a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.063290 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 108.39694276545391)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.05600000000000001, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:51:09 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dca000
 ctrladdr_CPU_wants_data : 0xb6dca000
 ctrladdr_PRU_data_ready : 0xb6dca004
 ctrladdr_CPU_new_sched  : 0xb6dca008
 ctrladdr_PRU_ack_sched  : 0xb6dca00c
 ctrladdr_CPU_new_period    : 0xb6dca010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dca014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dca018
 ctrladdr_SAMPLE_NUM        : 0xb6dca01c
 ctrladdr_cycle_count_req   : 0xb6dca020
 ctrladdr_cycle_count        : 0xb6dca024
 addr_cpu_data_buf : 0xb6dca028
 addr_pru_data_buf : 0xb6dca428
 addr_cpu_cmd_buf  : 0xb6dca828
 addr_pru_cmd_buf  : 0xb6dcaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000454 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 127.42877592499454)
Current local time and date: Mon Mar 13 11:51:13 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce0000
 ctrladdr_CPU_wants_data : 0xb6ce0000
 ctrladdr_PRU_data_ready : 0xb6ce0004
 ctrladdr_CPU_new_sched  : 0xb6ce0008
 ctrladdr_PRU_ack_sched  : 0xb6ce000c
 ctrladdr_CPU_new_period    : 0xb6ce0010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce0014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce0018
 ctrladdr_SAMPLE_NUM        : 0xb6ce001c
 ctrladdr_cycle_count_req   : 0xb6ce0020
 ctrladdr_cycle_count        : 0xb6ce0024
 addr_cpu_data_buf : 0xb6ce0028
 addr_pru_data_buf : 0xb6ce0428
 addr_cpu_cmd_buf  : 0xb6ce0828
 addr_pru_cmd_buf  : 0xb6ce0a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000746 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 111.8592079492735)
('===========================niter,dp,sum(dp):', 0, [0.008019000000000002, 0.006561000000000002, 0.00013122000000000003], 0.014711220000000002)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.05600000000000001, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:51:17 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce3000
 ctrladdr_CPU_wants_data : 0xb6ce3000
 ctrladdr_PRU_data_ready : 0xb6ce3004
 ctrladdr_CPU_new_sched  : 0xb6ce3008
 ctrladdr_PRU_ack_sched  : 0xb6ce300c
 ctrladdr_CPU_new_period    : 0xb6ce3010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce3014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce3018
 ctrladdr_SAMPLE_NUM        : 0xb6ce301c
 ctrladdr_cycle_count_req   : 0xb6ce3020
 ctrladdr_cycle_count        : 0xb6ce3024
 addr_cpu_data_buf : 0xb6ce3028
 addr_pru_data_buf : 0xb6ce3428
 addr_cpu_cmd_buf  : 0xb6ce3828
 addr_pru_cmd_buf  : 0xb6ce3a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.084981 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 116.41669952561861)
Current local time and date: Mon Mar 13 11:51:21 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d3d000
 ctrladdr_CPU_wants_data : 0xb6d3d000
 ctrladdr_PRU_data_ready : 0xb6d3d004
 ctrladdr_CPU_new_sched  : 0xb6d3d008
 ctrladdr_PRU_ack_sched  : 0xb6d3d00c
 ctrladdr_CPU_new_period    : 0xb6d3d010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d3d014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d3d018
 ctrladdr_SAMPLE_NUM        : 0xb6d3d01c
 ctrladdr_cycle_count_req   : 0xb6d3d020
 ctrladdr_cycle_count        : 0xb6d3d024
 addr_cpu_data_buf : 0xb6d3d028
 addr_pru_data_buf : 0xb6d3d428
 addr_cpu_cmd_buf  : 0xb6d3d828
 addr_pru_cmd_buf  : 0xb6d3da28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.101019 ki: -0.056000 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 265.57772356803486)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.05600000000000001, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:51:24 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d0c000
 ctrladdr_CPU_wants_data : 0xb6d0c000
 ctrladdr_PRU_data_ready : 0xb6d0c004
 ctrladdr_CPU_new_sched  : 0xb6d0c008
 ctrladdr_PRU_ack_sched  : 0xb6d0c00c
 ctrladdr_CPU_new_period    : 0xb6d0c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d0c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d0c018
 ctrladdr_SAMPLE_NUM        : 0xb6d0c01c
 ctrladdr_cycle_count_req   : 0xb6d0c020
 ctrladdr_cycle_count        : 0xb6d0c024
 addr_cpu_data_buf : 0xb6d0c028
 addr_pru_data_buf : 0xb6d0c428
 addr_cpu_cmd_buf  : 0xb6d0c828
 addr_pru_cmd_buf  : 0xb6d0ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.049439 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 107.78077386610831)
Current local time and date: Mon Mar 13 11:51:28 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d0f000
 ctrladdr_CPU_wants_data : 0xb6d0f000
 ctrladdr_PRU_data_ready : 0xb6d0f004
 ctrladdr_CPU_new_sched  : 0xb6d0f008
 ctrladdr_PRU_ack_sched  : 0xb6d0f00c
 ctrladdr_CPU_new_period    : 0xb6d0f010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d0f014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d0f018
 ctrladdr_SAMPLE_NUM        : 0xb6d0f01c
 ctrladdr_cycle_count_req   : 0xb6d0f020
 ctrladdr_cycle_count        : 0xb6d0f024
 addr_cpu_data_buf : 0xb6d0f028
 addr_pru_data_buf : 0xb6d0f428
 addr_cpu_cmd_buf  : 0xb6d0f828
 addr_pru_cmd_buf  : 0xb6d0fa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.062561 kd: -0.000600 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 115.21057501989998)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.056, -0.0005999999999999998])
Current local time and date: Mon Mar 13 11:51:32 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d03000
 ctrladdr_CPU_wants_data : 0xb6d03000
 ctrladdr_PRU_data_ready : 0xb6d03004
 ctrladdr_CPU_new_sched  : 0xb6d03008
 ctrladdr_PRU_ack_sched  : 0xb6d0300c
 ctrladdr_CPU_new_period    : 0xb6d03010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d03014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d03018
 ctrladdr_SAMPLE_NUM        : 0xb6d0301c
 ctrladdr_cycle_count_req   : 0xb6d03020
 ctrladdr_cycle_count        : 0xb6d03024
 addr_cpu_data_buf : 0xb6d03028
 addr_pru_data_buf : 0xb6d03428
 addr_cpu_cmd_buf  : 0xb6d03828
 addr_pru_cmd_buf  : 0xb6d03a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000469 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 132.17897688383266)
Current local time and date: Mon Mar 13 11:51:36 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce5000
 ctrladdr_CPU_wants_data : 0xb6ce5000
 ctrladdr_PRU_data_ready : 0xb6ce5004
 ctrladdr_CPU_new_sched  : 0xb6ce5008
 ctrladdr_PRU_ack_sched  : 0xb6ce500c
 ctrladdr_CPU_new_period    : 0xb6ce5010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce5014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce5018
 ctrladdr_SAMPLE_NUM        : 0xb6ce501c
 ctrladdr_cycle_count_req   : 0xb6ce5020
 ctrladdr_cycle_count        : 0xb6ce5024
 addr_cpu_data_buf : 0xb6ce5028
 addr_pru_data_buf : 0xb6ce5428
 addr_cpu_cmd_buf  : 0xb6ce5828
 addr_pru_cmd_buf  : 0xb6ce5a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 102.77983487660215)
('===========================niter,dp,sum(dp):', 0, [0.0072171000000000015, 0.005904900000000002, 0.00014434200000000005], 0.013266342000000004)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.056, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:51:39 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dcf000
 ctrladdr_CPU_wants_data : 0xb6dcf000
 ctrladdr_PRU_data_ready : 0xb6dcf004
 ctrladdr_CPU_new_sched  : 0xb6dcf008
 ctrladdr_PRU_ack_sched  : 0xb6dcf00c
 ctrladdr_CPU_new_period    : 0xb6dcf010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dcf014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dcf018
 ctrladdr_SAMPLE_NUM        : 0xb6dcf01c
 ctrladdr_cycle_count_req   : 0xb6dcf020
 ctrladdr_cycle_count        : 0xb6dcf024
 addr_cpu_data_buf : 0xb6dcf028
 addr_pru_data_buf : 0xb6dcf428
 addr_cpu_cmd_buf  : 0xb6dcf828
 addr_pru_cmd_buf  : 0xb6dcfa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.085783 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 114.244105098372)
Current local time and date: Mon Mar 13 11:51:43 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d81000
 ctrladdr_CPU_wants_data : 0xb6d81000
 ctrladdr_PRU_data_ready : 0xb6d81004
 ctrladdr_CPU_new_sched  : 0xb6d81008
 ctrladdr_PRU_ack_sched  : 0xb6d8100c
 ctrladdr_CPU_new_period    : 0xb6d81010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d81014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d81018
 ctrladdr_SAMPLE_NUM        : 0xb6d8101c
 ctrladdr_cycle_count_req   : 0xb6d81020
 ctrladdr_cycle_count        : 0xb6d81024
 addr_cpu_data_buf : 0xb6d81028
 addr_pru_data_buf : 0xb6d81428
 addr_cpu_cmd_buf  : 0xb6d81828
 addr_pru_cmd_buf  : 0xb6d81a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.100217 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 155.56060985729889)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.056, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:51:47 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d32000
 ctrladdr_CPU_wants_data : 0xb6d32000
 ctrladdr_PRU_data_ready : 0xb6d32004
 ctrladdr_CPU_new_sched  : 0xb6d32008
 ctrladdr_PRU_ack_sched  : 0xb6d3200c
 ctrladdr_CPU_new_period    : 0xb6d32010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d32014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d32018
 ctrladdr_SAMPLE_NUM        : 0xb6d3201c
 ctrladdr_cycle_count_req   : 0xb6d32020
 ctrladdr_cycle_count        : 0xb6d32024
 addr_cpu_data_buf : 0xb6d32028
 addr_pru_data_buf : 0xb6d32428
 addr_cpu_cmd_buf  : 0xb6d32828
 addr_pru_cmd_buf  : 0xb6d32a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.050095 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 122.18943340663486)
Current local time and date: Mon Mar 13 11:51:51 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8c000
 ctrladdr_CPU_wants_data : 0xb6d8c000
 ctrladdr_PRU_data_ready : 0xb6d8c004
 ctrladdr_CPU_new_sched  : 0xb6d8c008
 ctrladdr_PRU_ack_sched  : 0xb6d8c00c
 ctrladdr_CPU_new_period    : 0xb6d8c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8c018
 ctrladdr_SAMPLE_NUM        : 0xb6d8c01c
 ctrladdr_cycle_count_req   : 0xb6d8c020
 ctrladdr_cycle_count        : 0xb6d8c024
 addr_cpu_data_buf : 0xb6d8c028
 addr_pru_data_buf : 0xb6d8c428
 addr_cpu_cmd_buf  : 0xb6d8c828
 addr_pru_cmd_buf  : 0xb6d8ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.061905 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 113.21409566661369)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.055999999999999994, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:51:54 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d96000
 ctrladdr_CPU_wants_data : 0xb6d96000
 ctrladdr_PRU_data_ready : 0xb6d96004
 ctrladdr_CPU_new_sched  : 0xb6d96008
 ctrladdr_PRU_ack_sched  : 0xb6d9600c
 ctrladdr_CPU_new_period    : 0xb6d96010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d96014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d96018
 ctrladdr_SAMPLE_NUM        : 0xb6d9601c
 ctrladdr_cycle_count_req   : 0xb6d96020
 ctrladdr_cycle_count        : 0xb6d96024
 addr_cpu_data_buf : 0xb6d96028
 addr_pru_data_buf : 0xb6d96428
 addr_cpu_cmd_buf  : 0xb6d96828
 addr_pru_cmd_buf  : 0xb6d96a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000587 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 119.45759650443783)
Current local time and date: Mon Mar 13 11:51:58 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dad000
 ctrladdr_CPU_wants_data : 0xb6dad000
 ctrladdr_PRU_data_ready : 0xb6dad004
 ctrladdr_CPU_new_sched  : 0xb6dad008
 ctrladdr_PRU_ack_sched  : 0xb6dad00c
 ctrladdr_CPU_new_period    : 0xb6dad010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dad014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dad018
 ctrladdr_SAMPLE_NUM        : 0xb6dad01c
 ctrladdr_cycle_count_req   : 0xb6dad020
 ctrladdr_cycle_count        : 0xb6dad024
 addr_cpu_data_buf : 0xb6dad028
 addr_pru_data_buf : 0xb6dad428
 addr_cpu_cmd_buf  : 0xb6dad828
 addr_pru_cmd_buf  : 0xb6dada28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000876 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 114.14966978405958)
('===========================niter,dp,sum(dp):', 0, [0.006495390000000001, 0.005314410000000002, 0.00012990780000000004], 0.011939707800000003)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.055999999999999994, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:52:02 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8b000
 ctrladdr_CPU_wants_data : 0xb6d8b000
 ctrladdr_PRU_data_ready : 0xb6d8b004
 ctrladdr_CPU_new_sched  : 0xb6d8b008
 ctrladdr_PRU_ack_sched  : 0xb6d8b00c
 ctrladdr_CPU_new_period    : 0xb6d8b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8b018
 ctrladdr_SAMPLE_NUM        : 0xb6d8b01c
 ctrladdr_cycle_count_req   : 0xb6d8b020
 ctrladdr_cycle_count        : 0xb6d8b024
 addr_cpu_data_buf : 0xb6d8b028
 addr_pru_data_buf : 0xb6d8b428
 addr_cpu_cmd_buf  : 0xb6d8b828
 addr_pru_cmd_buf  : 0xb6d8ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.086505 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 115.79446216239113)
Current local time and date: Mon Mar 13 11:52:06 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d38000
 ctrladdr_CPU_wants_data : 0xb6d38000
 ctrladdr_PRU_data_ready : 0xb6d38004
 ctrladdr_CPU_new_sched  : 0xb6d38008
 ctrladdr_PRU_ack_sched  : 0xb6d3800c
 ctrladdr_CPU_new_period    : 0xb6d38010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d38014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d38018
 ctrladdr_SAMPLE_NUM        : 0xb6d3801c
 ctrladdr_cycle_count_req   : 0xb6d38020
 ctrladdr_cycle_count        : 0xb6d38024
 addr_cpu_data_buf : 0xb6d38028
 addr_pru_data_buf : 0xb6d38428
 addr_cpu_cmd_buf  : 0xb6d38828
 addr_pru_cmd_buf  : 0xb6d38a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.099495 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 367.83808659323881)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.055999999999999994, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:52:09 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d78000
 ctrladdr_CPU_wants_data : 0xb6d78000
 ctrladdr_PRU_data_ready : 0xb6d78004
 ctrladdr_CPU_new_sched  : 0xb6d78008
 ctrladdr_PRU_ack_sched  : 0xb6d7800c
 ctrladdr_CPU_new_period    : 0xb6d78010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d78014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d78018
 ctrladdr_SAMPLE_NUM        : 0xb6d7801c
 ctrladdr_cycle_count_req   : 0xb6d78020
 ctrladdr_cycle_count        : 0xb6d78024
 addr_cpu_data_buf : 0xb6d78028
 addr_pru_data_buf : 0xb6d78428
 addr_cpu_cmd_buf  : 0xb6d78828
 addr_pru_cmd_buf  : 0xb6d78a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.050686 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 117.82112171310605)
Current local time and date: Mon Mar 13 11:52:13 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d4e000
 ctrladdr_CPU_wants_data : 0xb6d4e000
 ctrladdr_PRU_data_ready : 0xb6d4e004
 ctrladdr_CPU_new_sched  : 0xb6d4e008
 ctrladdr_PRU_ack_sched  : 0xb6d4e00c
 ctrladdr_CPU_new_period    : 0xb6d4e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d4e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d4e018
 ctrladdr_SAMPLE_NUM        : 0xb6d4e01c
 ctrladdr_cycle_count_req   : 0xb6d4e020
 ctrladdr_cycle_count        : 0xb6d4e024
 addr_cpu_data_buf : 0xb6d4e028
 addr_pru_data_buf : 0xb6d4e428
 addr_cpu_cmd_buf  : 0xb6d4e828
 addr_pru_cmd_buf  : 0xb6d4ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.061314 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 176.86490272623084)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.055999999999999994, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:52:17 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d70000
 ctrladdr_CPU_wants_data : 0xb6d70000
 ctrladdr_PRU_data_ready : 0xb6d70004
 ctrladdr_CPU_new_sched  : 0xb6d70008
 ctrladdr_PRU_ack_sched  : 0xb6d7000c
 ctrladdr_CPU_new_period    : 0xb6d70010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d70014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d70018
 ctrladdr_SAMPLE_NUM        : 0xb6d7001c
 ctrladdr_cycle_count_req   : 0xb6d70020
 ctrladdr_cycle_count        : 0xb6d70024
 addr_cpu_data_buf : 0xb6d70028
 addr_pru_data_buf : 0xb6d70428
 addr_cpu_cmd_buf  : 0xb6d70828
 addr_pru_cmd_buf  : 0xb6d70a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000601 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 105.42561411316687)
Current local time and date: Mon Mar 13 11:52:21 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d9e000
 ctrladdr_CPU_wants_data : 0xb6d9e000
 ctrladdr_PRU_data_ready : 0xb6d9e004
 ctrladdr_CPU_new_sched  : 0xb6d9e008
 ctrladdr_PRU_ack_sched  : 0xb6d9e00c
 ctrladdr_CPU_new_period    : 0xb6d9e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d9e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d9e018
 ctrladdr_SAMPLE_NUM        : 0xb6d9e01c
 ctrladdr_cycle_count_req   : 0xb6d9e020
 ctrladdr_cycle_count        : 0xb6d9e024
 addr_cpu_data_buf : 0xb6d9e028
 addr_pru_data_buf : 0xb6d9e428
 addr_cpu_cmd_buf  : 0xb6d9e828
 addr_pru_cmd_buf  : 0xb6d9ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000861 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 108.19299197310096)
('===========================niter,dp,sum(dp):', 0, [0.005845851000000001, 0.004782969000000002, 0.00011691702000000005], 0.010745737020000003)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.055999999999999994, -0.00073122])
Current local time and date: Mon Mar 13 11:52:24 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d55000
 ctrladdr_CPU_wants_data : 0xb6d55000
 ctrladdr_PRU_data_ready : 0xb6d55004
 ctrladdr_CPU_new_sched  : 0xb6d55008
 ctrladdr_PRU_ack_sched  : 0xb6d5500c
 ctrladdr_CPU_new_period    : 0xb6d55010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d55014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d55018
 ctrladdr_SAMPLE_NUM        : 0xb6d5501c
 ctrladdr_cycle_count_req   : 0xb6d55020
 ctrladdr_cycle_count        : 0xb6d55024
 addr_cpu_data_buf : 0xb6d55028
 addr_pru_data_buf : 0xb6d55428
 addr_cpu_cmd_buf  : 0xb6d55828
 addr_pru_cmd_buf  : 0xb6d55a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.087154 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 113.38712719383936)
Current local time and date: Mon Mar 13 11:52:28 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d59000
 ctrladdr_CPU_wants_data : 0xb6d59000
 ctrladdr_PRU_data_ready : 0xb6d59004
 ctrladdr_CPU_new_sched  : 0xb6d59008
 ctrladdr_PRU_ack_sched  : 0xb6d5900c
 ctrladdr_CPU_new_period    : 0xb6d59010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d59014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d59018
 ctrladdr_SAMPLE_NUM        : 0xb6d5901c
 ctrladdr_cycle_count_req   : 0xb6d59020
 ctrladdr_cycle_count        : 0xb6d59024
 addr_cpu_data_buf : 0xb6d59028
 addr_pru_data_buf : 0xb6d59428
 addr_cpu_cmd_buf  : 0xb6d59828
 addr_pru_cmd_buf  : 0xb6d59a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098846 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 172.18515649618107)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.055999999999999994, -0.00073122])
Current local time and date: Mon Mar 13 11:52:32 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc6000
 ctrladdr_CPU_wants_data : 0xb6dc6000
 ctrladdr_PRU_data_ready : 0xb6dc6004
 ctrladdr_CPU_new_sched  : 0xb6dc6008
 ctrladdr_PRU_ack_sched  : 0xb6dc600c
 ctrladdr_CPU_new_period    : 0xb6dc6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc6018
 ctrladdr_SAMPLE_NUM        : 0xb6dc601c
 ctrladdr_cycle_count_req   : 0xb6dc6020
 ctrladdr_cycle_count        : 0xb6dc6024
 addr_cpu_data_buf : 0xb6dc6028
 addr_pru_data_buf : 0xb6dc6428
 addr_cpu_cmd_buf  : 0xb6dc6828
 addr_pru_cmd_buf  : 0xb6dc6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.051217 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 113.30440645181447)
Current local time and date: Mon Mar 13 11:52:36 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2d000
 ctrladdr_CPU_wants_data : 0xb6d2d000
 ctrladdr_PRU_data_ready : 0xb6d2d004
 ctrladdr_CPU_new_sched  : 0xb6d2d008
 ctrladdr_PRU_ack_sched  : 0xb6d2d00c
 ctrladdr_CPU_new_period    : 0xb6d2d010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2d014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2d018
 ctrladdr_SAMPLE_NUM        : 0xb6d2d01c
 ctrladdr_cycle_count_req   : 0xb6d2d020
 ctrladdr_cycle_count        : 0xb6d2d024
 addr_cpu_data_buf : 0xb6d2d028
 addr_pru_data_buf : 0xb6d2d428
 addr_cpu_cmd_buf  : 0xb6d2d828
 addr_pru_cmd_buf  : 0xb6d2da28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.060783 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 106.00838517965764)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.05599999999999999, -0.00073122])
Current local time and date: Mon Mar 13 11:52:39 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d1a000
 ctrladdr_CPU_wants_data : 0xb6d1a000
 ctrladdr_PRU_data_ready : 0xb6d1a004
 ctrladdr_CPU_new_sched  : 0xb6d1a008
 ctrladdr_PRU_ack_sched  : 0xb6d1a00c
 ctrladdr_CPU_new_period    : 0xb6d1a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d1a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d1a018
 ctrladdr_SAMPLE_NUM        : 0xb6d1a01c
 ctrladdr_cycle_count_req   : 0xb6d1a020
 ctrladdr_cycle_count        : 0xb6d1a024
 addr_cpu_data_buf : 0xb6d1a028
 addr_pru_data_buf : 0xb6d1a428
 addr_cpu_cmd_buf  : 0xb6d1a828
 addr_pru_cmd_buf  : 0xb6d1aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000614 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 108.65624663933356)
Current local time and date: Mon Mar 13 11:52:43 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8c000
 ctrladdr_CPU_wants_data : 0xb6d8c000
 ctrladdr_PRU_data_ready : 0xb6d8c004
 ctrladdr_CPU_new_sched  : 0xb6d8c008
 ctrladdr_PRU_ack_sched  : 0xb6d8c00c
 ctrladdr_CPU_new_period    : 0xb6d8c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8c018
 ctrladdr_SAMPLE_NUM        : 0xb6d8c01c
 ctrladdr_cycle_count_req   : 0xb6d8c020
 ctrladdr_cycle_count        : 0xb6d8c024
 addr_cpu_data_buf : 0xb6d8c028
 addr_pru_data_buf : 0xb6d8c428
 addr_cpu_cmd_buf  : 0xb6d8c828
 addr_pru_cmd_buf  : 0xb6d8ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000848 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 110.28588009948361)
('===========================niter,dp,sum(dp):', 0, [0.005261265900000001, 0.004304672100000002, 0.00010522531800000004], 0.009671163318000003)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000003, -0.05599999999999999, -0.00073122])
Current local time and date: Mon Mar 13 11:52:47 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d6a000
 ctrladdr_CPU_wants_data : 0xb6d6a000
 ctrladdr_PRU_data_ready : 0xb6d6a004
 ctrladdr_CPU_new_sched  : 0xb6d6a008
 ctrladdr_PRU_ack_sched  : 0xb6d6a00c
 ctrladdr_CPU_new_period    : 0xb6d6a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d6a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d6a018
 ctrladdr_SAMPLE_NUM        : 0xb6d6a01c
 ctrladdr_cycle_count_req   : 0xb6d6a020
 ctrladdr_cycle_count        : 0xb6d6a024
 addr_cpu_data_buf : 0xb6d6a028
 addr_pru_data_buf : 0xb6d6a428
 addr_cpu_cmd_buf  : 0xb6d6a828
 addr_pru_cmd_buf  : 0xb6d6aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.087739 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 114.89549140732207)
Current local time and date: Mon Mar 13 11:52:51 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d92000
 ctrladdr_CPU_wants_data : 0xb6d92000
 ctrladdr_PRU_data_ready : 0xb6d92004
 ctrladdr_CPU_new_sched  : 0xb6d92008
 ctrladdr_PRU_ack_sched  : 0xb6d9200c
 ctrladdr_CPU_new_period    : 0xb6d92010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d92014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d92018
 ctrladdr_SAMPLE_NUM        : 0xb6d9201c
 ctrladdr_cycle_count_req   : 0xb6d92020
 ctrladdr_cycle_count        : 0xb6d92024
 addr_cpu_data_buf : 0xb6d92028
 addr_pru_data_buf : 0xb6d92428
 addr_cpu_cmd_buf  : 0xb6d92828
 addr_pru_cmd_buf  : 0xb6d92a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098261 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 379.50727720253559)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.05599999999999999, -0.00073122])
Current local time and date: Mon Mar 13 11:52:55 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2b000
 ctrladdr_CPU_wants_data : 0xb6d2b000
 ctrladdr_PRU_data_ready : 0xb6d2b004
 ctrladdr_CPU_new_sched  : 0xb6d2b008
 ctrladdr_PRU_ack_sched  : 0xb6d2b00c
 ctrladdr_CPU_new_period    : 0xb6d2b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2b018
 ctrladdr_SAMPLE_NUM        : 0xb6d2b01c
 ctrladdr_cycle_count_req   : 0xb6d2b020
 ctrladdr_cycle_count        : 0xb6d2b024
 addr_cpu_data_buf : 0xb6d2b028
 addr_pru_data_buf : 0xb6d2b428
 addr_cpu_cmd_buf  : 0xb6d2b828
 addr_pru_cmd_buf  : 0xb6d2ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.051695 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 117.15898528627517)
Current local time and date: Mon Mar 13 11:52:58 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cdb000
 ctrladdr_CPU_wants_data : 0xb6cdb000
 ctrladdr_PRU_data_ready : 0xb6cdb004
 ctrladdr_CPU_new_sched  : 0xb6cdb008
 ctrladdr_PRU_ack_sched  : 0xb6cdb00c
 ctrladdr_CPU_new_period    : 0xb6cdb010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cdb014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cdb018
 ctrladdr_SAMPLE_NUM        : 0xb6cdb01c
 ctrladdr_cycle_count_req   : 0xb6cdb020
 ctrladdr_cycle_count        : 0xb6cdb024
 addr_cpu_data_buf : 0xb6cdb028
 addr_pru_data_buf : 0xb6cdb428
 addr_cpu_cmd_buf  : 0xb6cdb828
 addr_pru_cmd_buf  : 0xb6cdba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.060305 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 109.63255443727572)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:02 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d27000
 ctrladdr_CPU_wants_data : 0xb6d27000
 ctrladdr_PRU_data_ready : 0xb6d27004
 ctrladdr_CPU_new_sched  : 0xb6d27008
 ctrladdr_PRU_ack_sched  : 0xb6d2700c
 ctrladdr_CPU_new_period    : 0xb6d27010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d27014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d27018
 ctrladdr_SAMPLE_NUM        : 0xb6d2701c
 ctrladdr_cycle_count_req   : 0xb6d27020
 ctrladdr_cycle_count        : 0xb6d27024
 addr_cpu_data_buf : 0xb6d27028
 addr_pru_data_buf : 0xb6d27428
 addr_cpu_cmd_buf  : 0xb6d27828
 addr_pru_cmd_buf  : 0xb6d27a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000626 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 116.18124016045918)
Current local time and date: Mon Mar 13 11:53:06 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d64000
 ctrladdr_CPU_wants_data : 0xb6d64000
 ctrladdr_PRU_data_ready : 0xb6d64004
 ctrladdr_CPU_new_sched  : 0xb6d64008
 ctrladdr_PRU_ack_sched  : 0xb6d6400c
 ctrladdr_CPU_new_period    : 0xb6d64010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d64014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d64018
 ctrladdr_SAMPLE_NUM        : 0xb6d6401c
 ctrladdr_cycle_count_req   : 0xb6d64020
 ctrladdr_cycle_count        : 0xb6d64024
 addr_cpu_data_buf : 0xb6d64028
 addr_pru_data_buf : 0xb6d64428
 addr_cpu_cmd_buf  : 0xb6d64828
 addr_pru_cmd_buf  : 0xb6d64a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093000 ki: -0.056000 kd: -0.000836 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 104.33615809331151)
('===========================niter,dp,sum(dp):', 0, [0.004735139310000001, 0.003874204890000002, 9.470278620000004e-05], 0.008704046986200002)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09300000000000001, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:10 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d45000
 ctrladdr_CPU_wants_data : 0xb6d45000
 ctrladdr_PRU_data_ready : 0xb6d45004
 ctrladdr_CPU_new_sched  : 0xb6d45008
 ctrladdr_PRU_ack_sched  : 0xb6d4500c
 ctrladdr_CPU_new_period    : 0xb6d45010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d45014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d45018
 ctrladdr_SAMPLE_NUM        : 0xb6d4501c
 ctrladdr_cycle_count_req   : 0xb6d45020
 ctrladdr_cycle_count        : 0xb6d45024
 addr_cpu_data_buf : 0xb6d45028
 addr_pru_data_buf : 0xb6d45428
 addr_cpu_cmd_buf  : 0xb6d45828
 addr_pru_cmd_buf  : 0xb6d45a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.088265 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 112.71994343721501)
Current local time and date: Mon Mar 13 11:53:13 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da0000
 ctrladdr_CPU_wants_data : 0xb6da0000
 ctrladdr_PRU_data_ready : 0xb6da0004
 ctrladdr_CPU_new_sched  : 0xb6da0008
 ctrladdr_PRU_ack_sched  : 0xb6da000c
 ctrladdr_CPU_new_period    : 0xb6da0010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da0014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da0018
 ctrladdr_SAMPLE_NUM        : 0xb6da001c
 ctrladdr_cycle_count_req   : 0xb6da0020
 ctrladdr_cycle_count        : 0xb6da0024
 addr_cpu_data_buf : 0xb6da0028
 addr_pru_data_buf : 0xb6da0428
 addr_cpu_cmd_buf  : 0xb6da0828
 addr_pru_cmd_buf  : 0xb6da0a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 102.03779893448906)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:17 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6db5000
 ctrladdr_CPU_wants_data : 0xb6db5000
 ctrladdr_PRU_data_ready : 0xb6db5004
 ctrladdr_CPU_new_sched  : 0xb6db5008
 ctrladdr_PRU_ack_sched  : 0xb6db500c
 ctrladdr_CPU_new_period    : 0xb6db5010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6db5014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6db5018
 ctrladdr_SAMPLE_NUM        : 0xb6db501c
 ctrladdr_cycle_count_req   : 0xb6db5020
 ctrladdr_cycle_count        : 0xb6db5024
 addr_cpu_data_buf : 0xb6db5028
 addr_pru_data_buf : 0xb6db5428
 addr_cpu_cmd_buf  : 0xb6db5828
 addr_pru_cmd_buf  : 0xb6db5a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.052126 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 282.58212401257651)
Current local time and date: Mon Mar 13 11:53:21 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6daa000
 ctrladdr_CPU_wants_data : 0xb6daa000
 ctrladdr_PRU_data_ready : 0xb6daa004
 ctrladdr_CPU_new_sched  : 0xb6daa008
 ctrladdr_PRU_ack_sched  : 0xb6daa00c
 ctrladdr_CPU_new_period    : 0xb6daa010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6daa014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6daa018
 ctrladdr_SAMPLE_NUM        : 0xb6daa01c
 ctrladdr_cycle_count_req   : 0xb6daa020
 ctrladdr_cycle_count        : 0xb6daa024
 addr_cpu_data_buf : 0xb6daa028
 addr_pru_data_buf : 0xb6daa428
 addr_cpu_cmd_buf  : 0xb6daa828
 addr_pru_cmd_buf  : 0xb6daaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.059874 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 142.7630503198491)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:25 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce7000
 ctrladdr_CPU_wants_data : 0xb6ce7000
 ctrladdr_PRU_data_ready : 0xb6ce7004
 ctrladdr_CPU_new_sched  : 0xb6ce7008
 ctrladdr_PRU_ack_sched  : 0xb6ce700c
 ctrladdr_CPU_new_period    : 0xb6ce7010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce7014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce7018
 ctrladdr_SAMPLE_NUM        : 0xb6ce701c
 ctrladdr_cycle_count_req   : 0xb6ce7020
 ctrladdr_cycle_count        : 0xb6ce7024
 addr_cpu_data_buf : 0xb6ce7028
 addr_pru_data_buf : 0xb6ce7428
 addr_cpu_cmd_buf  : 0xb6ce7828
 addr_pru_cmd_buf  : 0xb6ce7a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000637 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 185.96726428380526)
Current local time and date: Mon Mar 13 11:53:28 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d04000
 ctrladdr_CPU_wants_data : 0xb6d04000
 ctrladdr_PRU_data_ready : 0xb6d04004
 ctrladdr_CPU_new_sched  : 0xb6d04008
 ctrladdr_PRU_ack_sched  : 0xb6d0400c
 ctrladdr_CPU_new_period    : 0xb6d04010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d04014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d04018
 ctrladdr_SAMPLE_NUM        : 0xb6d0401c
 ctrladdr_cycle_count_req   : 0xb6d04020
 ctrladdr_cycle_count        : 0xb6d04024
 addr_cpu_data_buf : 0xb6d04028
 addr_pru_data_buf : 0xb6d04428
 addr_cpu_cmd_buf  : 0xb6d04828
 addr_pru_cmd_buf  : 0xb6d04a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000826 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 120.94588535301655)
('===========================niter,dp,sum(dp):', 0, [0.005208653241000001, 0.003486784401000002, 8.523250758000004e-05], 0.008780670149580002)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:32 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2e000
 ctrladdr_CPU_wants_data : 0xb6d2e000
 ctrladdr_PRU_data_ready : 0xb6d2e004
 ctrladdr_CPU_new_sched  : 0xb6d2e008
 ctrladdr_PRU_ack_sched  : 0xb6d2e00c
 ctrladdr_CPU_new_period    : 0xb6d2e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2e018
 ctrladdr_SAMPLE_NUM        : 0xb6d2e01c
 ctrladdr_cycle_count_req   : 0xb6d2e020
 ctrladdr_cycle_count        : 0xb6d2e024
 addr_cpu_data_buf : 0xb6d2e028
 addr_pru_data_buf : 0xb6d2e428
 addr_cpu_cmd_buf  : 0xb6d2e828
 addr_pru_cmd_buf  : 0xb6d2ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.092526 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 115.23593911171072)
Current local time and date: Mon Mar 13 11:53:36 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d97000
 ctrladdr_CPU_wants_data : 0xb6d97000
 ctrladdr_PRU_data_ready : 0xb6d97004
 ctrladdr_CPU_new_sched  : 0xb6d97008
 ctrladdr_PRU_ack_sched  : 0xb6d9700c
 ctrladdr_CPU_new_period    : 0xb6d97010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d97014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d97018
 ctrladdr_SAMPLE_NUM        : 0xb6d9701c
 ctrladdr_cycle_count_req   : 0xb6d97020
 ctrladdr_cycle_count        : 0xb6d97024
 addr_cpu_data_buf : 0xb6d97028
 addr_pru_data_buf : 0xb6d97428
 addr_cpu_cmd_buf  : 0xb6d97828
 addr_pru_cmd_buf  : 0xb6d97a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.102944 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 222.03751237442498)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:40 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cf3000
 ctrladdr_CPU_wants_data : 0xb6cf3000
 ctrladdr_PRU_data_ready : 0xb6cf3004
 ctrladdr_CPU_new_sched  : 0xb6cf3008
 ctrladdr_PRU_ack_sched  : 0xb6cf300c
 ctrladdr_CPU_new_period    : 0xb6cf3010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cf3014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cf3018
 ctrladdr_SAMPLE_NUM        : 0xb6cf301c
 ctrladdr_cycle_count_req   : 0xb6cf3020
 ctrladdr_cycle_count        : 0xb6cf3024
 addr_cpu_data_buf : 0xb6cf3028
 addr_pru_data_buf : 0xb6cf3428
 addr_cpu_cmd_buf  : 0xb6cf3828
 addr_pru_cmd_buf  : 0xb6cf3a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.052513 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 169.03816096982388)
Current local time and date: Mon Mar 13 11:53:44 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d6f000
 ctrladdr_CPU_wants_data : 0xb6d6f000
 ctrladdr_PRU_data_ready : 0xb6d6f004
 ctrladdr_CPU_new_sched  : 0xb6d6f008
 ctrladdr_PRU_ack_sched  : 0xb6d6f00c
 ctrladdr_CPU_new_period    : 0xb6d6f010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d6f014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d6f018
 ctrladdr_SAMPLE_NUM        : 0xb6d6f01c
 ctrladdr_cycle_count_req   : 0xb6d6f020
 ctrladdr_cycle_count        : 0xb6d6f024
 addr_cpu_data_buf : 0xb6d6f028
 addr_pru_data_buf : 0xb6d6f428
 addr_cpu_cmd_buf  : 0xb6d6f828
 addr_pru_cmd_buf  : 0xb6d6fa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.059487 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 169.62995269337983)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:47 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d4a000
 ctrladdr_CPU_wants_data : 0xb6d4a000
 ctrladdr_PRU_data_ready : 0xb6d4a004
 ctrladdr_CPU_new_sched  : 0xb6d4a008
 ctrladdr_PRU_ack_sched  : 0xb6d4a00c
 ctrladdr_CPU_new_period    : 0xb6d4a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d4a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d4a018
 ctrladdr_SAMPLE_NUM        : 0xb6d4a01c
 ctrladdr_cycle_count_req   : 0xb6d4a020
 ctrladdr_cycle_count        : 0xb6d4a024
 addr_cpu_data_buf : 0xb6d4a028
 addr_pru_data_buf : 0xb6d4a428
 addr_cpu_cmd_buf  : 0xb6d4a828
 addr_pru_cmd_buf  : 0xb6d4aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000646 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 169.46524841372459)
Current local time and date: Mon Mar 13 11:53:51 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2a000
 ctrladdr_CPU_wants_data : 0xb6d2a000
 ctrladdr_PRU_data_ready : 0xb6d2a004
 ctrladdr_CPU_new_sched  : 0xb6d2a008
 ctrladdr_PRU_ack_sched  : 0xb6d2a00c
 ctrladdr_CPU_new_period    : 0xb6d2a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2a018
 ctrladdr_SAMPLE_NUM        : 0xb6d2a01c
 ctrladdr_cycle_count_req   : 0xb6d2a020
 ctrladdr_cycle_count        : 0xb6d2a024
 addr_cpu_data_buf : 0xb6d2a028
 addr_pru_data_buf : 0xb6d2a428
 addr_cpu_cmd_buf  : 0xb6d2a828
 addr_pru_cmd_buf  : 0xb6d2aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000816 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 144.81176061874609)
('===========================niter,dp,sum(dp):', 0, [0.004687787916900001, 0.003138105960900002, 7.670925682200004e-05], 0.007902603134622004)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:53:55 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8a000
 ctrladdr_CPU_wants_data : 0xb6d8a000
 ctrladdr_PRU_data_ready : 0xb6d8a004
 ctrladdr_CPU_new_sched  : 0xb6d8a008
 ctrladdr_PRU_ack_sched  : 0xb6d8a00c
 ctrladdr_CPU_new_period    : 0xb6d8a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8a018
 ctrladdr_SAMPLE_NUM        : 0xb6d8a01c
 ctrladdr_cycle_count_req   : 0xb6d8a020
 ctrladdr_cycle_count        : 0xb6d8a024
 addr_cpu_data_buf : 0xb6d8a028
 addr_pru_data_buf : 0xb6d8a428
 addr_cpu_cmd_buf  : 0xb6d8a828
 addr_pru_cmd_buf  : 0xb6d8aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093047 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 107.9517952505828)
Current local time and date: Mon Mar 13 11:53:59 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cfa000
 ctrladdr_CPU_wants_data : 0xb6cfa000
 ctrladdr_PRU_data_ready : 0xb6cfa004
 ctrladdr_CPU_new_sched  : 0xb6cfa008
 ctrladdr_PRU_ack_sched  : 0xb6cfa00c
 ctrladdr_CPU_new_period    : 0xb6cfa010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cfa014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cfa018
 ctrladdr_SAMPLE_NUM        : 0xb6cfa01c
 ctrladdr_cycle_count_req   : 0xb6cfa020
 ctrladdr_cycle_count        : 0xb6cfa024
 addr_cpu_data_buf : 0xb6cfa028
 addr_pru_data_buf : 0xb6cfa428
 addr_cpu_cmd_buf  : 0xb6cfa828
 addr_pru_cmd_buf  : 0xb6cfaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.102423 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 385.868876608025)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:54:02 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d0b000
 ctrladdr_CPU_wants_data : 0xb6d0b000
 ctrladdr_PRU_data_ready : 0xb6d0b004
 ctrladdr_CPU_new_sched  : 0xb6d0b008
 ctrladdr_PRU_ack_sched  : 0xb6d0b00c
 ctrladdr_CPU_new_period    : 0xb6d0b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d0b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d0b018
 ctrladdr_SAMPLE_NUM        : 0xb6d0b01c
 ctrladdr_cycle_count_req   : 0xb6d0b020
 ctrladdr_cycle_count        : 0xb6d0b024
 addr_cpu_data_buf : 0xb6d0b028
 addr_pru_data_buf : 0xb6d0b428
 addr_cpu_cmd_buf  : 0xb6d0b828
 addr_pru_cmd_buf  : 0xb6d0ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.052862 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 145.6492349257683)
Current local time and date: Mon Mar 13 11:54:06 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d6b000
 ctrladdr_CPU_wants_data : 0xb6d6b000
 ctrladdr_PRU_data_ready : 0xb6d6b004
 ctrladdr_CPU_new_sched  : 0xb6d6b008
 ctrladdr_PRU_ack_sched  : 0xb6d6b00c
 ctrladdr_CPU_new_period    : 0xb6d6b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d6b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d6b018
 ctrladdr_SAMPLE_NUM        : 0xb6d6b01c
 ctrladdr_cycle_count_req   : 0xb6d6b020
 ctrladdr_cycle_count        : 0xb6d6b024
 addr_cpu_data_buf : 0xb6d6b028
 addr_pru_data_buf : 0xb6d6b428
 addr_cpu_cmd_buf  : 0xb6d6b828
 addr_pru_cmd_buf  : 0xb6d6ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.059138 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 130.65700075017875)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05599999999999998, -0.00073122])
Current local time and date: Mon Mar 13 11:54:10 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dcd000
 ctrladdr_CPU_wants_data : 0xb6dcd000
 ctrladdr_PRU_data_ready : 0xb6dcd004
 ctrladdr_CPU_new_sched  : 0xb6dcd008
 ctrladdr_PRU_ack_sched  : 0xb6dcd00c
 ctrladdr_CPU_new_period    : 0xb6dcd010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dcd014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dcd018
 ctrladdr_SAMPLE_NUM        : 0xb6dcd01c
 ctrladdr_cycle_count_req   : 0xb6dcd020
 ctrladdr_cycle_count        : 0xb6dcd024
 addr_cpu_data_buf : 0xb6dcd028
 addr_pru_data_buf : 0xb6dcd428
 addr_cpu_cmd_buf  : 0xb6dcd828
 addr_pru_cmd_buf  : 0xb6dcda28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000655 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 152.59650290943364)
Current local time and date: Mon Mar 13 11:54:14 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d0b000
 ctrladdr_CPU_wants_data : 0xb6d0b000
 ctrladdr_PRU_data_ready : 0xb6d0b004
 ctrladdr_CPU_new_sched  : 0xb6d0b008
 ctrladdr_PRU_ack_sched  : 0xb6d0b00c
 ctrladdr_CPU_new_period    : 0xb6d0b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d0b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d0b018
 ctrladdr_SAMPLE_NUM        : 0xb6d0b01c
 ctrladdr_cycle_count_req   : 0xb6d0b020
 ctrladdr_cycle_count        : 0xb6d0b024
 addr_cpu_data_buf : 0xb6d0b028
 addr_pru_data_buf : 0xb6d0b428
 addr_cpu_cmd_buf  : 0xb6d0b828
 addr_pru_cmd_buf  : 0xb6d0ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000808 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 229.59976558737674)
('===========================niter,dp,sum(dp):', 0, [0.004219009125210001, 0.0028242953648100018, 6.903833113980004e-05], 0.007112342821159803)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05599999999999998, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:54:17 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dbb000
 ctrladdr_CPU_wants_data : 0xb6dbb000
 ctrladdr_PRU_data_ready : 0xb6dbb004
 ctrladdr_CPU_new_sched  : 0xb6dbb008
 ctrladdr_PRU_ack_sched  : 0xb6dbb00c
 ctrladdr_CPU_new_period    : 0xb6dbb010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dbb014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dbb018
 ctrladdr_SAMPLE_NUM        : 0xb6dbb01c
 ctrladdr_cycle_count_req   : 0xb6dbb020
 ctrladdr_cycle_count        : 0xb6dbb024
 addr_cpu_data_buf : 0xb6dbb028
 addr_pru_data_buf : 0xb6dbb428
 addr_cpu_cmd_buf  : 0xb6dbb828
 addr_pru_cmd_buf  : 0xb6dbba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093516 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 141.93972548429105)
Current local time and date: Mon Mar 13 11:54:21 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d1b000
 ctrladdr_CPU_wants_data : 0xb6d1b000
 ctrladdr_PRU_data_ready : 0xb6d1b004
 ctrladdr_CPU_new_sched  : 0xb6d1b008
 ctrladdr_PRU_ack_sched  : 0xb6d1b00c
 ctrladdr_CPU_new_period    : 0xb6d1b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d1b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d1b018
 ctrladdr_SAMPLE_NUM        : 0xb6d1b01c
 ctrladdr_cycle_count_req   : 0xb6d1b020
 ctrladdr_cycle_count        : 0xb6d1b024
 addr_cpu_data_buf : 0xb6d1b028
 addr_pru_data_buf : 0xb6d1b428
 addr_cpu_cmd_buf  : 0xb6d1b828
 addr_pru_cmd_buf  : 0xb6d1ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.101954 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 424.23426199117944)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05599999999999998, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:54:25 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2b000
 ctrladdr_CPU_wants_data : 0xb6d2b000
 ctrladdr_PRU_data_ready : 0xb6d2b004
 ctrladdr_CPU_new_sched  : 0xb6d2b008
 ctrladdr_PRU_ack_sched  : 0xb6d2b00c
 ctrladdr_CPU_new_period    : 0xb6d2b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2b018
 ctrladdr_SAMPLE_NUM        : 0xb6d2b01c
 ctrladdr_cycle_count_req   : 0xb6d2b020
 ctrladdr_cycle_count        : 0xb6d2b024
 addr_cpu_data_buf : 0xb6d2b028
 addr_pru_data_buf : 0xb6d2b428
 addr_cpu_cmd_buf  : 0xb6d2b828
 addr_pru_cmd_buf  : 0xb6d2ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.053176 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 108.71798597098996)
Current local time and date: Mon Mar 13 11:54:29 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cf6000
 ctrladdr_CPU_wants_data : 0xb6cf6000
 ctrladdr_PRU_data_ready : 0xb6cf6004
 ctrladdr_CPU_new_sched  : 0xb6cf6008
 ctrladdr_PRU_ack_sched  : 0xb6cf600c
 ctrladdr_CPU_new_period    : 0xb6cf6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cf6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cf6018
 ctrladdr_SAMPLE_NUM        : 0xb6cf601c
 ctrladdr_cycle_count_req   : 0xb6cf6020
 ctrladdr_cycle_count        : 0xb6cf6024
 addr_cpu_data_buf : 0xb6cf6028
 addr_pru_data_buf : 0xb6cf6428
 addr_cpu_cmd_buf  : 0xb6cf6828
 addr_pru_cmd_buf  : 0xb6cf6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.058824 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 118.46798814720937)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:54:33 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d5a000
 ctrladdr_CPU_wants_data : 0xb6d5a000
 ctrladdr_PRU_data_ready : 0xb6d5a004
 ctrladdr_CPU_new_sched  : 0xb6d5a008
 ctrladdr_PRU_ack_sched  : 0xb6d5a00c
 ctrladdr_CPU_new_period    : 0xb6d5a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d5a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d5a018
 ctrladdr_SAMPLE_NUM        : 0xb6d5a01c
 ctrladdr_cycle_count_req   : 0xb6d5a020
 ctrladdr_cycle_count        : 0xb6d5a024
 addr_cpu_data_buf : 0xb6d5a028
 addr_pru_data_buf : 0xb6d5a428
 addr_cpu_cmd_buf  : 0xb6d5a828
 addr_pru_cmd_buf  : 0xb6d5aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000662 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 206.14872797049594)
Current local time and date: Mon Mar 13 11:54:37 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d44000
 ctrladdr_CPU_wants_data : 0xb6d44000
 ctrladdr_PRU_data_ready : 0xb6d44004
 ctrladdr_CPU_new_sched  : 0xb6d44008
 ctrladdr_PRU_ack_sched  : 0xb6d4400c
 ctrladdr_CPU_new_period    : 0xb6d44010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d44014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d44018
 ctrladdr_SAMPLE_NUM        : 0xb6d4401c
 ctrladdr_cycle_count_req   : 0xb6d44020
 ctrladdr_cycle_count        : 0xb6d44024
 addr_cpu_data_buf : 0xb6d44028
 addr_pru_data_buf : 0xb6d44428
 addr_cpu_cmd_buf  : 0xb6d44828
 addr_pru_cmd_buf  : 0xb6d44a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000800 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 133.5238014024581)
('===========================niter,dp,sum(dp):', 0, [0.0037971082126890014, 0.0025418658283290017, 6.213449802582005e-05], 0.0064011085390438234)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:54:41 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc2000
 ctrladdr_CPU_wants_data : 0xb6dc2000
 ctrladdr_PRU_data_ready : 0xb6dc2004
 ctrladdr_CPU_new_sched  : 0xb6dc2008
 ctrladdr_PRU_ack_sched  : 0xb6dc200c
 ctrladdr_CPU_new_period    : 0xb6dc2010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc2014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc2018
 ctrladdr_SAMPLE_NUM        : 0xb6dc201c
 ctrladdr_cycle_count_req   : 0xb6dc2020
 ctrladdr_cycle_count        : 0xb6dc2024
 addr_cpu_data_buf : 0xb6dc2028
 addr_pru_data_buf : 0xb6dc2428
 addr_cpu_cmd_buf  : 0xb6dc2828
 addr_pru_cmd_buf  : 0xb6dc2a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.093938 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 118.67508611848496)
Current local time and date: Mon Mar 13 11:54:44 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d28000
 ctrladdr_CPU_wants_data : 0xb6d28000
 ctrladdr_PRU_data_ready : 0xb6d28004
 ctrladdr_CPU_new_sched  : 0xb6d28008
 ctrladdr_PRU_ack_sched  : 0xb6d2800c
 ctrladdr_CPU_new_period    : 0xb6d28010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d28014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d28018
 ctrladdr_SAMPLE_NUM        : 0xb6d2801c
 ctrladdr_cycle_count_req   : 0xb6d28020
 ctrladdr_cycle_count        : 0xb6d28024
 addr_cpu_data_buf : 0xb6d28028
 addr_pru_data_buf : 0xb6d28428
 addr_cpu_cmd_buf  : 0xb6d28828
 addr_pru_cmd_buf  : 0xb6d28a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.101532 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 355.92730018367342)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:54:48 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d24000
 ctrladdr_CPU_wants_data : 0xb6d24000
 ctrladdr_PRU_data_ready : 0xb6d24004
 ctrladdr_CPU_new_sched  : 0xb6d24008
 ctrladdr_PRU_ack_sched  : 0xb6d2400c
 ctrladdr_CPU_new_period    : 0xb6d24010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d24014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d24018
 ctrladdr_SAMPLE_NUM        : 0xb6d2401c
 ctrladdr_cycle_count_req   : 0xb6d24020
 ctrladdr_cycle_count        : 0xb6d24024
 addr_cpu_data_buf : 0xb6d24028
 addr_pru_data_buf : 0xb6d24428
 addr_cpu_cmd_buf  : 0xb6d24828
 addr_pru_cmd_buf  : 0xb6d24a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.053458 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 127.39287903116356)
Current local time and date: Mon Mar 13 11:54:52 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd2000
 ctrladdr_CPU_wants_data : 0xb6cd2000
 ctrladdr_PRU_data_ready : 0xb6cd2004
 ctrladdr_CPU_new_sched  : 0xb6cd2008
 ctrladdr_PRU_ack_sched  : 0xb6cd200c
 ctrladdr_CPU_new_period    : 0xb6cd2010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd2014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd2018
 ctrladdr_SAMPLE_NUM        : 0xb6cd201c
 ctrladdr_cycle_count_req   : 0xb6cd2020
 ctrladdr_cycle_count        : 0xb6cd2024
 addr_cpu_data_buf : 0xb6cd2028
 addr_pru_data_buf : 0xb6cd2428
 addr_cpu_cmd_buf  : 0xb6cd2828
 addr_pru_cmd_buf  : 0xb6cd2a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.058542 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 124.80979048747099)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:54:56 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d71000
 ctrladdr_CPU_wants_data : 0xb6d71000
 ctrladdr_PRU_data_ready : 0xb6d71004
 ctrladdr_CPU_new_sched  : 0xb6d71008
 ctrladdr_PRU_ack_sched  : 0xb6d7100c
 ctrladdr_CPU_new_period    : 0xb6d71010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d71014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d71018
 ctrladdr_SAMPLE_NUM        : 0xb6d7101c
 ctrladdr_cycle_count_req   : 0xb6d71020
 ctrladdr_cycle_count        : 0xb6d71024
 addr_cpu_data_buf : 0xb6d71028
 addr_pru_data_buf : 0xb6d71428
 addr_cpu_cmd_buf  : 0xb6d71828
 addr_pru_cmd_buf  : 0xb6d71a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000669 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 149.28412761481528)
Current local time and date: Mon Mar 13 11:54:59 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cdb000
 ctrladdr_CPU_wants_data : 0xb6cdb000
 ctrladdr_PRU_data_ready : 0xb6cdb004
 ctrladdr_CPU_new_sched  : 0xb6cdb008
 ctrladdr_PRU_ack_sched  : 0xb6cdb00c
 ctrladdr_CPU_new_period    : 0xb6cdb010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cdb014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cdb018
 ctrladdr_SAMPLE_NUM        : 0xb6cdb01c
 ctrladdr_cycle_count_req   : 0xb6cdb020
 ctrladdr_cycle_count        : 0xb6cdb024
 addr_cpu_data_buf : 0xb6cdb028
 addr_pru_data_buf : 0xb6cdb428
 addr_cpu_cmd_buf  : 0xb6cdb828
 addr_pru_cmd_buf  : 0xb6cdba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000793 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 129.98645436162741)
('===========================niter,dp,sum(dp):', 0, [0.003417397391420101, 0.0022876792454961017, 5.592104822323804e-05], 0.005760997685139441)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:03 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2d000
 ctrladdr_CPU_wants_data : 0xb6d2d000
 ctrladdr_PRU_data_ready : 0xb6d2d004
 ctrladdr_CPU_new_sched  : 0xb6d2d008
 ctrladdr_PRU_ack_sched  : 0xb6d2d00c
 ctrladdr_CPU_new_period    : 0xb6d2d010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2d014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2d018
 ctrladdr_SAMPLE_NUM        : 0xb6d2d01c
 ctrladdr_cycle_count_req   : 0xb6d2d020
 ctrladdr_cycle_count        : 0xb6d2d024
 addr_cpu_data_buf : 0xb6d2d028
 addr_pru_data_buf : 0xb6d2d428
 addr_cpu_cmd_buf  : 0xb6d2d828
 addr_pru_cmd_buf  : 0xb6d2da28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.094318 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 113.19679185089353)
Current local time and date: Mon Mar 13 11:55:07 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da6000
 ctrladdr_CPU_wants_data : 0xb6da6000
 ctrladdr_PRU_data_ready : 0xb6da6004
 ctrladdr_CPU_new_sched  : 0xb6da6008
 ctrladdr_PRU_ack_sched  : 0xb6da600c
 ctrladdr_CPU_new_period    : 0xb6da6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da6018
 ctrladdr_SAMPLE_NUM        : 0xb6da601c
 ctrladdr_cycle_count_req   : 0xb6da6020
 ctrladdr_cycle_count        : 0xb6da6024
 addr_cpu_data_buf : 0xb6da6028
 addr_pru_data_buf : 0xb6da6428
 addr_cpu_cmd_buf  : 0xb6da6828
 addr_pru_cmd_buf  : 0xb6da6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.101153 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 448.98826963170205)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:11 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d57000
 ctrladdr_CPU_wants_data : 0xb6d57000
 ctrladdr_PRU_data_ready : 0xb6d57004
 ctrladdr_CPU_new_sched  : 0xb6d57008
 ctrladdr_PRU_ack_sched  : 0xb6d5700c
 ctrladdr_CPU_new_period    : 0xb6d57010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d57014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d57018
 ctrladdr_SAMPLE_NUM        : 0xb6d5701c
 ctrladdr_cycle_count_req   : 0xb6d57020
 ctrladdr_cycle_count        : 0xb6d57024
 addr_cpu_data_buf : 0xb6d57028
 addr_pru_data_buf : 0xb6d57428
 addr_cpu_cmd_buf  : 0xb6d57828
 addr_pru_cmd_buf  : 0xb6d57a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.053712 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 181.85400149716838)
Current local time and date: Mon Mar 13 11:55:15 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d1b000
 ctrladdr_CPU_wants_data : 0xb6d1b000
 ctrladdr_PRU_data_ready : 0xb6d1b004
 ctrladdr_CPU_new_sched  : 0xb6d1b008
 ctrladdr_PRU_ack_sched  : 0xb6d1b00c
 ctrladdr_CPU_new_period    : 0xb6d1b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d1b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d1b018
 ctrladdr_SAMPLE_NUM        : 0xb6d1b01c
 ctrladdr_cycle_count_req   : 0xb6d1b020
 ctrladdr_cycle_count        : 0xb6d1b024
 addr_cpu_data_buf : 0xb6d1b028
 addr_pru_data_buf : 0xb6d1b428
 addr_cpu_cmd_buf  : 0xb6d1b828
 addr_pru_cmd_buf  : 0xb6d1ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.058288 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 321.25656003050415)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:18 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d06000
 ctrladdr_CPU_wants_data : 0xb6d06000
 ctrladdr_PRU_data_ready : 0xb6d06004
 ctrladdr_CPU_new_sched  : 0xb6d06008
 ctrladdr_PRU_ack_sched  : 0xb6d0600c
 ctrladdr_CPU_new_period    : 0xb6d06010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d06014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d06018
 ctrladdr_SAMPLE_NUM        : 0xb6d0601c
 ctrladdr_cycle_count_req   : 0xb6d06020
 ctrladdr_cycle_count        : 0xb6d06024
 addr_cpu_data_buf : 0xb6d06028
 addr_pru_data_buf : 0xb6d06428
 addr_cpu_cmd_buf  : 0xb6d06828
 addr_pru_cmd_buf  : 0xb6d06a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000675 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 149.94480712023037)
Current local time and date: Mon Mar 13 11:55:22 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc6000
 ctrladdr_CPU_wants_data : 0xb6dc6000
 ctrladdr_PRU_data_ready : 0xb6dc6004
 ctrladdr_CPU_new_sched  : 0xb6dc6008
 ctrladdr_PRU_ack_sched  : 0xb6dc600c
 ctrladdr_CPU_new_period    : 0xb6dc6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc6018
 ctrladdr_SAMPLE_NUM        : 0xb6dc601c
 ctrladdr_cycle_count_req   : 0xb6dc6020
 ctrladdr_cycle_count        : 0xb6dc6024
 addr_cpu_data_buf : 0xb6dc6028
 addr_pru_data_buf : 0xb6dc6428
 addr_cpu_cmd_buf  : 0xb6dc6828
 addr_pru_cmd_buf  : 0xb6dc6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000787 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 106.61457639842553)
('===========================niter,dp,sum(dp):', 0, [0.0030756576522780912, 0.0020589113209464917, 5.0328943400914236e-05], 0.005184897916625498)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:26 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d43000
 ctrladdr_CPU_wants_data : 0xb6d43000
 ctrladdr_PRU_data_ready : 0xb6d43004
 ctrladdr_CPU_new_sched  : 0xb6d43008
 ctrladdr_PRU_ack_sched  : 0xb6d4300c
 ctrladdr_CPU_new_period    : 0xb6d43010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d43014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d43018
 ctrladdr_SAMPLE_NUM        : 0xb6d4301c
 ctrladdr_cycle_count_req   : 0xb6d43020
 ctrladdr_cycle_count        : 0xb6d43024
 addr_cpu_data_buf : 0xb6d43028
 addr_pru_data_buf : 0xb6d43428
 addr_cpu_cmd_buf  : 0xb6d43828
 addr_pru_cmd_buf  : 0xb6d43a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.094659 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 122.50818748067803)
Current local time and date: Mon Mar 13 11:55:30 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d53000
 ctrladdr_CPU_wants_data : 0xb6d53000
 ctrladdr_PRU_data_ready : 0xb6d53004
 ctrladdr_CPU_new_sched  : 0xb6d53008
 ctrladdr_PRU_ack_sched  : 0xb6d5300c
 ctrladdr_CPU_new_period    : 0xb6d53010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d53014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d53018
 ctrladdr_SAMPLE_NUM        : 0xb6d5301c
 ctrladdr_cycle_count_req   : 0xb6d53020
 ctrladdr_cycle_count        : 0xb6d53024
 addr_cpu_data_buf : 0xb6d53028
 addr_pru_data_buf : 0xb6d53428
 addr_cpu_cmd_buf  : 0xb6d53828
 addr_pru_cmd_buf  : 0xb6d53a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.100811 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 365.14891049709234)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:34 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2a000
 ctrladdr_CPU_wants_data : 0xb6d2a000
 ctrladdr_PRU_data_ready : 0xb6d2a004
 ctrladdr_CPU_new_sched  : 0xb6d2a008
 ctrladdr_PRU_ack_sched  : 0xb6d2a00c
 ctrladdr_CPU_new_period    : 0xb6d2a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2a018
 ctrladdr_SAMPLE_NUM        : 0xb6d2a01c
 ctrladdr_cycle_count_req   : 0xb6d2a020
 ctrladdr_cycle_count        : 0xb6d2a024
 addr_cpu_data_buf : 0xb6d2a028
 addr_pru_data_buf : 0xb6d2a428
 addr_cpu_cmd_buf  : 0xb6d2a828
 addr_pru_cmd_buf  : 0xb6d2aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.053941 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 117.08162806873158)
Current local time and date: Mon Mar 13 11:55:37 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dca000
 ctrladdr_CPU_wants_data : 0xb6dca000
 ctrladdr_PRU_data_ready : 0xb6dca004
 ctrladdr_CPU_new_sched  : 0xb6dca008
 ctrladdr_PRU_ack_sched  : 0xb6dca00c
 ctrladdr_CPU_new_period    : 0xb6dca010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dca014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dca018
 ctrladdr_SAMPLE_NUM        : 0xb6dca01c
 ctrladdr_cycle_count_req   : 0xb6dca020
 ctrladdr_cycle_count        : 0xb6dca024
 addr_cpu_data_buf : 0xb6dca028
 addr_pru_data_buf : 0xb6dca428
 addr_cpu_cmd_buf  : 0xb6dca828
 addr_pru_cmd_buf  : 0xb6dcaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.058059 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 292.40390183415923)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999998, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:41 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d60000
 ctrladdr_CPU_wants_data : 0xb6d60000
 ctrladdr_PRU_data_ready : 0xb6d60004
 ctrladdr_CPU_new_sched  : 0xb6d60008
 ctrladdr_PRU_ack_sched  : 0xb6d6000c
 ctrladdr_CPU_new_period    : 0xb6d60010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d60014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d60018
 ctrladdr_SAMPLE_NUM        : 0xb6d6001c
 ctrladdr_cycle_count_req   : 0xb6d60020
 ctrladdr_cycle_count        : 0xb6d60024
 addr_cpu_data_buf : 0xb6d60028
 addr_pru_data_buf : 0xb6d60428
 addr_cpu_cmd_buf  : 0xb6d60828
 addr_pru_cmd_buf  : 0xb6d60a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000681 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 164.55712143720163)
Current local time and date: Mon Mar 13 11:55:45 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d90000
 ctrladdr_CPU_wants_data : 0xb6d90000
 ctrladdr_PRU_data_ready : 0xb6d90004
 ctrladdr_CPU_new_sched  : 0xb6d90008
 ctrladdr_PRU_ack_sched  : 0xb6d9000c
 ctrladdr_CPU_new_period    : 0xb6d90010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d90014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d90018
 ctrladdr_SAMPLE_NUM        : 0xb6d9001c
 ctrladdr_cycle_count_req   : 0xb6d90020
 ctrladdr_cycle_count        : 0xb6d90024
 addr_cpu_data_buf : 0xb6d90028
 addr_pru_data_buf : 0xb6d90428
 addr_cpu_cmd_buf  : 0xb6d90828
 addr_pru_cmd_buf  : 0xb6d90a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000782 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 378.9545913203911)
('===========================niter,dp,sum(dp):', 0, [0.002768091887050282, 0.0018530201888518425, 4.5296049060822816e-05], 0.0046664081249629475)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999998, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:49 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd6000
 ctrladdr_CPU_wants_data : 0xb6cd6000
 ctrladdr_PRU_data_ready : 0xb6cd6004
 ctrladdr_CPU_new_sched  : 0xb6cd6008
 ctrladdr_PRU_ack_sched  : 0xb6cd600c
 ctrladdr_CPU_new_period    : 0xb6cd6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd6018
 ctrladdr_SAMPLE_NUM        : 0xb6cd601c
 ctrladdr_cycle_count_req   : 0xb6cd6020
 ctrladdr_cycle_count        : 0xb6cd6024
 addr_cpu_data_buf : 0xb6cd6028
 addr_pru_data_buf : 0xb6cd6428
 addr_cpu_cmd_buf  : 0xb6cd6828
 addr_pru_cmd_buf  : 0xb6cd6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.094967 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 104.3659826711968)
Current local time and date: Mon Mar 13 11:55:52 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cfd000
 ctrladdr_CPU_wants_data : 0xb6cfd000
 ctrladdr_PRU_data_ready : 0xb6cfd004
 ctrladdr_CPU_new_sched  : 0xb6cfd008
 ctrladdr_PRU_ack_sched  : 0xb6cfd00c
 ctrladdr_CPU_new_period    : 0xb6cfd010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cfd014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cfd018
 ctrladdr_SAMPLE_NUM        : 0xb6cfd01c
 ctrladdr_cycle_count_req   : 0xb6cfd020
 ctrladdr_cycle_count        : 0xb6cfd024
 addr_cpu_data_buf : 0xb6cfd028
 addr_pru_data_buf : 0xb6cfd428
 addr_cpu_cmd_buf  : 0xb6cfd828
 addr_pru_cmd_buf  : 0xb6cfda28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.100503 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 365.89393641483184)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999998, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:55:56 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce7000
 ctrladdr_CPU_wants_data : 0xb6ce7000
 ctrladdr_PRU_data_ready : 0xb6ce7004
 ctrladdr_CPU_new_sched  : 0xb6ce7008
 ctrladdr_PRU_ack_sched  : 0xb6ce700c
 ctrladdr_CPU_new_period    : 0xb6ce7010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce7014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce7018
 ctrladdr_SAMPLE_NUM        : 0xb6ce701c
 ctrladdr_cycle_count_req   : 0xb6ce7020
 ctrladdr_cycle_count        : 0xb6ce7024
 addr_cpu_data_buf : 0xb6ce7028
 addr_pru_data_buf : 0xb6ce7428
 addr_cpu_cmd_buf  : 0xb6ce7828
 addr_pru_cmd_buf  : 0xb6ce7a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.054147 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 313.78263896621837)
Current local time and date: Mon Mar 13 11:56:00 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d48000
 ctrladdr_CPU_wants_data : 0xb6d48000
 ctrladdr_PRU_data_ready : 0xb6d48004
 ctrladdr_CPU_new_sched  : 0xb6d48008
 ctrladdr_PRU_ack_sched  : 0xb6d4800c
 ctrladdr_CPU_new_period    : 0xb6d48010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d48014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d48018
 ctrladdr_SAMPLE_NUM        : 0xb6d4801c
 ctrladdr_cycle_count_req   : 0xb6d48020
 ctrladdr_cycle_count        : 0xb6d48024
 addr_cpu_data_buf : 0xb6d48028
 addr_pru_data_buf : 0xb6d48428
 addr_cpu_cmd_buf  : 0xb6d48828
 addr_pru_cmd_buf  : 0xb6d48a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.057853 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 249.59379674630785)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:56:04 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d23000
 ctrladdr_CPU_wants_data : 0xb6d23000
 ctrladdr_PRU_data_ready : 0xb6d23004
 ctrladdr_CPU_new_sched  : 0xb6d23008
 ctrladdr_PRU_ack_sched  : 0xb6d2300c
 ctrladdr_CPU_new_period    : 0xb6d23010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d23014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d23018
 ctrladdr_SAMPLE_NUM        : 0xb6d2301c
 ctrladdr_cycle_count_req   : 0xb6d23020
 ctrladdr_cycle_count        : 0xb6d23024
 addr_cpu_data_buf : 0xb6d23028
 addr_pru_data_buf : 0xb6d23428
 addr_cpu_cmd_buf  : 0xb6d23828
 addr_pru_cmd_buf  : 0xb6d23a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000686 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 247.78713069057858)
Current local time and date: Mon Mar 13 11:56:07 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd5000
 ctrladdr_CPU_wants_data : 0xb6cd5000
 ctrladdr_PRU_data_ready : 0xb6cd5004
 ctrladdr_CPU_new_sched  : 0xb6cd5008
 ctrladdr_PRU_ack_sched  : 0xb6cd500c
 ctrladdr_CPU_new_period    : 0xb6cd5010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd5014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd5018
 ctrladdr_SAMPLE_NUM        : 0xb6cd501c
 ctrladdr_cycle_count_req   : 0xb6cd5020
 ctrladdr_cycle_count        : 0xb6cd5024
 addr_cpu_data_buf : 0xb6cd5028
 addr_pru_data_buf : 0xb6cd5428
 addr_cpu_cmd_buf  : 0xb6cd5828
 addr_pru_cmd_buf  : 0xb6cd5a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000777 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 154.21397415902544)
('===========================niter,dp,sum(dp):', 0, [0.002491282698345254, 0.0016677181699666583, 4.0766444154740536e-05], 0.0041997673124666525)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:56:11 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d1f000
 ctrladdr_CPU_wants_data : 0xb6d1f000
 ctrladdr_PRU_data_ready : 0xb6d1f004
 ctrladdr_CPU_new_sched  : 0xb6d1f008
 ctrladdr_PRU_ack_sched  : 0xb6d1f00c
 ctrladdr_CPU_new_period    : 0xb6d1f010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d1f014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d1f018
 ctrladdr_SAMPLE_NUM        : 0xb6d1f01c
 ctrladdr_cycle_count_req   : 0xb6d1f020
 ctrladdr_cycle_count        : 0xb6d1f024
 addr_cpu_data_buf : 0xb6d1f028
 addr_pru_data_buf : 0xb6d1f428
 addr_cpu_cmd_buf  : 0xb6d1f828
 addr_pru_cmd_buf  : 0xb6d1fa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.095244 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 124.1394861409955)
Current local time and date: Mon Mar 13 11:56:15 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce1000
 ctrladdr_CPU_wants_data : 0xb6ce1000
 ctrladdr_PRU_data_ready : 0xb6ce1004
 ctrladdr_CPU_new_sched  : 0xb6ce1008
 ctrladdr_PRU_ack_sched  : 0xb6ce100c
 ctrladdr_CPU_new_period    : 0xb6ce1010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce1014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce1018
 ctrladdr_SAMPLE_NUM        : 0xb6ce101c
 ctrladdr_cycle_count_req   : 0xb6ce1020
 ctrladdr_cycle_count        : 0xb6ce1024
 addr_cpu_data_buf : 0xb6ce1028
 addr_pru_data_buf : 0xb6ce1428
 addr_cpu_cmd_buf  : 0xb6ce1828
 addr_pru_cmd_buf  : 0xb6ce1a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.100226 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 311.55378955226826)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:56:19 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d36000
 ctrladdr_CPU_wants_data : 0xb6d36000
 ctrladdr_PRU_data_ready : 0xb6d36004
 ctrladdr_CPU_new_sched  : 0xb6d36008
 ctrladdr_PRU_ack_sched  : 0xb6d3600c
 ctrladdr_CPU_new_period    : 0xb6d36010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d36014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d36018
 ctrladdr_SAMPLE_NUM        : 0xb6d3601c
 ctrladdr_cycle_count_req   : 0xb6d36020
 ctrladdr_cycle_count        : 0xb6d36024
 addr_cpu_data_buf : 0xb6d36028
 addr_pru_data_buf : 0xb6d36428
 addr_cpu_cmd_buf  : 0xb6d36828
 addr_pru_cmd_buf  : 0xb6d36a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.054332 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 245.86613659295759)
Current local time and date: Mon Mar 13 11:56:23 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cf0000
 ctrladdr_CPU_wants_data : 0xb6cf0000
 ctrladdr_PRU_data_ready : 0xb6cf0004
 ctrladdr_CPU_new_sched  : 0xb6cf0008
 ctrladdr_PRU_ack_sched  : 0xb6cf000c
 ctrladdr_CPU_new_period    : 0xb6cf0010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cf0014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cf0018
 ctrladdr_SAMPLE_NUM        : 0xb6cf001c
 ctrladdr_cycle_count_req   : 0xb6cf0020
 ctrladdr_cycle_count        : 0xb6cf0024
 addr_cpu_data_buf : 0xb6cf0028
 addr_pru_data_buf : 0xb6cf0428
 addr_cpu_cmd_buf  : 0xb6cf0828
 addr_pru_cmd_buf  : 0xb6cf0a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.057668 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 121.1566655932612)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999999])
Current local time and date: Mon Mar 13 11:56:26 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da8000
 ctrladdr_CPU_wants_data : 0xb6da8000
 ctrladdr_PRU_data_ready : 0xb6da8004
 ctrladdr_CPU_new_sched  : 0xb6da8008
 ctrladdr_PRU_ack_sched  : 0xb6da800c
 ctrladdr_CPU_new_period    : 0xb6da8010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da8014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da8018
 ctrladdr_SAMPLE_NUM        : 0xb6da801c
 ctrladdr_cycle_count_req   : 0xb6da8020
 ctrladdr_cycle_count        : 0xb6da8024
 addr_cpu_data_buf : 0xb6da8028
 addr_pru_data_buf : 0xb6da8428
 addr_cpu_cmd_buf  : 0xb6da8828
 addr_pru_cmd_buf  : 0xb6da8a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000690 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 116.29863896603214)
Current local time and date: Mon Mar 13 11:56:30 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dce000
 ctrladdr_CPU_wants_data : 0xb6dce000
 ctrladdr_PRU_data_ready : 0xb6dce004
 ctrladdr_CPU_new_sched  : 0xb6dce008
 ctrladdr_PRU_ack_sched  : 0xb6dce00c
 ctrladdr_CPU_new_period    : 0xb6dce010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dce014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dce018
 ctrladdr_SAMPLE_NUM        : 0xb6dce01c
 ctrladdr_cycle_count_req   : 0xb6dce020
 ctrladdr_cycle_count        : 0xb6dce024
 addr_cpu_data_buf : 0xb6dce028
 addr_pru_data_buf : 0xb6dce428
 addr_cpu_cmd_buf  : 0xb6dce828
 addr_pru_cmd_buf  : 0xb6dcea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000772 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 106.4706285386318)
('===========================niter,dp,sum(dp):', 0, [0.0022421544285107287, 0.0015009463529699924, 3.668979973926648e-05], 0.003779790581219988)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.05599999999999999, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:56:34 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d5e000
 ctrladdr_CPU_wants_data : 0xb6d5e000
 ctrladdr_PRU_data_ready : 0xb6d5e004
 ctrladdr_CPU_new_sched  : 0xb6d5e008
 ctrladdr_PRU_ack_sched  : 0xb6d5e00c
 ctrladdr_CPU_new_period    : 0xb6d5e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d5e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d5e018
 ctrladdr_SAMPLE_NUM        : 0xb6d5e01c
 ctrladdr_cycle_count_req   : 0xb6d5e020
 ctrladdr_cycle_count        : 0xb6d5e024
 addr_cpu_data_buf : 0xb6d5e028
 addr_pru_data_buf : 0xb6d5e428
 addr_cpu_cmd_buf  : 0xb6d5e828
 addr_pru_cmd_buf  : 0xb6d5ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.095493 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 180.26114022781394)
Current local time and date: Mon Mar 13 11:56:38 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dba000
 ctrladdr_CPU_wants_data : 0xb6dba000
 ctrladdr_PRU_data_ready : 0xb6dba004
 ctrladdr_CPU_new_sched  : 0xb6dba008
 ctrladdr_PRU_ack_sched  : 0xb6dba00c
 ctrladdr_CPU_new_period    : 0xb6dba010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dba014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dba018
 ctrladdr_SAMPLE_NUM        : 0xb6dba01c
 ctrladdr_cycle_count_req   : 0xb6dba020
 ctrladdr_cycle_count        : 0xb6dba024
 addr_cpu_data_buf : 0xb6dba028
 addr_pru_data_buf : 0xb6dba428
 addr_cpu_cmd_buf  : 0xb6dba828
 addr_pru_cmd_buf  : 0xb6dbaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.099977 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 230.1520472951679)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05599999999999999, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:56:41 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d19000
 ctrladdr_CPU_wants_data : 0xb6d19000
 ctrladdr_PRU_data_ready : 0xb6d19004
 ctrladdr_CPU_new_sched  : 0xb6d19008
 ctrladdr_PRU_ack_sched  : 0xb6d1900c
 ctrladdr_CPU_new_period    : 0xb6d19010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d19014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d19018
 ctrladdr_SAMPLE_NUM        : 0xb6d1901c
 ctrladdr_cycle_count_req   : 0xb6d19020
 ctrladdr_cycle_count        : 0xb6d19024
 addr_cpu_data_buf : 0xb6d19028
 addr_pru_data_buf : 0xb6d19428
 addr_cpu_cmd_buf  : 0xb6d19828
 addr_pru_cmd_buf  : 0xb6d19a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.054499 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 132.00220775128392)
Current local time and date: Mon Mar 13 11:56:45 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d24000
 ctrladdr_CPU_wants_data : 0xb6d24000
 ctrladdr_PRU_data_ready : 0xb6d24004
 ctrladdr_CPU_new_sched  : 0xb6d24008
 ctrladdr_PRU_ack_sched  : 0xb6d2400c
 ctrladdr_CPU_new_period    : 0xb6d24010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d24014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d24018
 ctrladdr_SAMPLE_NUM        : 0xb6d2401c
 ctrladdr_cycle_count_req   : 0xb6d24020
 ctrladdr_cycle_count        : 0xb6d24024
 addr_cpu_data_buf : 0xb6d24028
 addr_pru_data_buf : 0xb6d24428
 addr_cpu_cmd_buf  : 0xb6d24828
 addr_pru_cmd_buf  : 0xb6d24a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.057501 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 151.64156163809085)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.055999999999999994, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:56:49 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d73000
 ctrladdr_CPU_wants_data : 0xb6d73000
 ctrladdr_PRU_data_ready : 0xb6d73004
 ctrladdr_CPU_new_sched  : 0xb6d73008
 ctrladdr_PRU_ack_sched  : 0xb6d7300c
 ctrladdr_CPU_new_period    : 0xb6d73010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d73014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d73018
 ctrladdr_SAMPLE_NUM        : 0xb6d7301c
 ctrladdr_cycle_count_req   : 0xb6d73020
 ctrladdr_cycle_count        : 0xb6d73024
 addr_cpu_data_buf : 0xb6d73028
 addr_pru_data_buf : 0xb6d73428
 addr_cpu_cmd_buf  : 0xb6d73828
 addr_pru_cmd_buf  : 0xb6d73a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000695 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 112.23920884775892)
Current local time and date: Mon Mar 13 11:56:53 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d96000
 ctrladdr_CPU_wants_data : 0xb6d96000
 ctrladdr_PRU_data_ready : 0xb6d96004
 ctrladdr_CPU_new_sched  : 0xb6d96008
 ctrladdr_PRU_ack_sched  : 0xb6d9600c
 ctrladdr_CPU_new_period    : 0xb6d96010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d96014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d96018
 ctrladdr_SAMPLE_NUM        : 0xb6d9601c
 ctrladdr_cycle_count_req   : 0xb6d96020
 ctrladdr_cycle_count        : 0xb6d96024
 addr_cpu_data_buf : 0xb6d96028
 addr_pru_data_buf : 0xb6d96428
 addr_cpu_cmd_buf  : 0xb6d96828
 addr_pru_cmd_buf  : 0xb6d96a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000768 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 201.94129318176451)
('===========================niter,dp,sum(dp):', 0, [0.002017938985659656, 0.0013508517176729932, 3.302081976533984e-05], 0.0034018115230979888)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.055999999999999994, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:56:56 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d9e000
 ctrladdr_CPU_wants_data : 0xb6d9e000
 ctrladdr_PRU_data_ready : 0xb6d9e004
 ctrladdr_CPU_new_sched  : 0xb6d9e008
 ctrladdr_PRU_ack_sched  : 0xb6d9e00c
 ctrladdr_CPU_new_period    : 0xb6d9e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d9e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d9e018
 ctrladdr_SAMPLE_NUM        : 0xb6d9e01c
 ctrladdr_cycle_count_req   : 0xb6d9e020
 ctrladdr_cycle_count        : 0xb6d9e024
 addr_cpu_data_buf : 0xb6d9e028
 addr_pru_data_buf : 0xb6d9e428
 addr_cpu_cmd_buf  : 0xb6d9e828
 addr_pru_cmd_buf  : 0xb6d9ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.095717 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 167.28352298201384)
Current local time and date: Mon Mar 13 11:57:00 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd5000
 ctrladdr_CPU_wants_data : 0xb6cd5000
 ctrladdr_PRU_data_ready : 0xb6cd5004
 ctrladdr_CPU_new_sched  : 0xb6cd5008
 ctrladdr_PRU_ack_sched  : 0xb6cd500c
 ctrladdr_CPU_new_period    : 0xb6cd5010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd5014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd5018
 ctrladdr_SAMPLE_NUM        : 0xb6cd501c
 ctrladdr_cycle_count_req   : 0xb6cd5020
 ctrladdr_cycle_count        : 0xb6cd5024
 addr_cpu_data_buf : 0xb6cd5028
 addr_pru_data_buf : 0xb6cd5428
 addr_cpu_cmd_buf  : 0xb6cd5828
 addr_pru_cmd_buf  : 0xb6cd5a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.099753 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 136.61698233587285)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.055999999999999994, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:04 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cee000
 ctrladdr_CPU_wants_data : 0xb6cee000
 ctrladdr_PRU_data_ready : 0xb6cee004
 ctrladdr_CPU_new_sched  : 0xb6cee008
 ctrladdr_PRU_ack_sched  : 0xb6cee00c
 ctrladdr_CPU_new_period    : 0xb6cee010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cee014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cee018
 ctrladdr_SAMPLE_NUM        : 0xb6cee01c
 ctrladdr_cycle_count_req   : 0xb6cee020
 ctrladdr_cycle_count        : 0xb6cee024
 addr_cpu_data_buf : 0xb6cee028
 addr_pru_data_buf : 0xb6cee428
 addr_cpu_cmd_buf  : 0xb6cee828
 addr_pru_cmd_buf  : 0xb6ceea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.054649 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 257.0497770159721)
Current local time and date: Mon Mar 13 11:57:08 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d69000
 ctrladdr_CPU_wants_data : 0xb6d69000
 ctrladdr_PRU_data_ready : 0xb6d69004
 ctrladdr_CPU_new_sched  : 0xb6d69008
 ctrladdr_PRU_ack_sched  : 0xb6d6900c
 ctrladdr_CPU_new_period    : 0xb6d69010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d69014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d69018
 ctrladdr_SAMPLE_NUM        : 0xb6d6901c
 ctrladdr_cycle_count_req   : 0xb6d69020
 ctrladdr_cycle_count        : 0xb6d69024
 addr_cpu_data_buf : 0xb6d69028
 addr_pru_data_buf : 0xb6d69428
 addr_cpu_cmd_buf  : 0xb6d69828
 addr_pru_cmd_buf  : 0xb6d69a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.057351 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 239.54268944249992)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:12 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d64000
 ctrladdr_CPU_wants_data : 0xb6d64000
 ctrladdr_PRU_data_ready : 0xb6d64004
 ctrladdr_CPU_new_sched  : 0xb6d64008
 ctrladdr_PRU_ack_sched  : 0xb6d6400c
 ctrladdr_CPU_new_period    : 0xb6d64010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d64014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d64018
 ctrladdr_SAMPLE_NUM        : 0xb6d6401c
 ctrladdr_cycle_count_req   : 0xb6d64020
 ctrladdr_cycle_count        : 0xb6d64024
 addr_cpu_data_buf : 0xb6d64028
 addr_pru_data_buf : 0xb6d64428
 addr_cpu_cmd_buf  : 0xb6d64828
 addr_pru_cmd_buf  : 0xb6d64a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000698 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 103.71453742669932)
Current local time and date: Mon Mar 13 11:57:15 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d49000
 ctrladdr_CPU_wants_data : 0xb6d49000
 ctrladdr_PRU_data_ready : 0xb6d49004
 ctrladdr_CPU_new_sched  : 0xb6d49008
 ctrladdr_PRU_ack_sched  : 0xb6d4900c
 ctrladdr_CPU_new_period    : 0xb6d49010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d49014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d49018
 ctrladdr_SAMPLE_NUM        : 0xb6d4901c
 ctrladdr_cycle_count_req   : 0xb6d49020
 ctrladdr_cycle_count        : 0xb6d49024
 addr_cpu_data_buf : 0xb6d49028
 addr_pru_data_buf : 0xb6d49428
 addr_cpu_cmd_buf  : 0xb6d49828
 addr_pru_cmd_buf  : 0xb6d49a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000764 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 108.88984039169964)
('===========================niter,dp,sum(dp):', 0, [0.0018161450870936902, 0.001215766545905694, 2.9718737788805854e-05], 0.00306163037078819)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:19 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d5e000
 ctrladdr_CPU_wants_data : 0xb6d5e000
 ctrladdr_PRU_data_ready : 0xb6d5e004
 ctrladdr_CPU_new_sched  : 0xb6d5e008
 ctrladdr_PRU_ack_sched  : 0xb6d5e00c
 ctrladdr_CPU_new_period    : 0xb6d5e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d5e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d5e018
 ctrladdr_SAMPLE_NUM        : 0xb6d5e01c
 ctrladdr_cycle_count_req   : 0xb6d5e020
 ctrladdr_cycle_count        : 0xb6d5e024
 addr_cpu_data_buf : 0xb6d5e028
 addr_pru_data_buf : 0xb6d5e428
 addr_cpu_cmd_buf  : 0xb6d5e828
 addr_pru_cmd_buf  : 0xb6d5ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.095919 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 144.90586475927347)
Current local time and date: Mon Mar 13 11:57:23 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc8000
 ctrladdr_CPU_wants_data : 0xb6dc8000
 ctrladdr_PRU_data_ready : 0xb6dc8004
 ctrladdr_CPU_new_sched  : 0xb6dc8008
 ctrladdr_PRU_ack_sched  : 0xb6dc800c
 ctrladdr_CPU_new_period    : 0xb6dc8010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc8014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc8018
 ctrladdr_SAMPLE_NUM        : 0xb6dc801c
 ctrladdr_cycle_count_req   : 0xb6dc8020
 ctrladdr_cycle_count        : 0xb6dc8024
 addr_cpu_data_buf : 0xb6dc8028
 addr_pru_data_buf : 0xb6dc8428
 addr_cpu_cmd_buf  : 0xb6dc8828
 addr_pru_cmd_buf  : 0xb6dc8a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.099551 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 241.53290917718337)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:27 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2a000
 ctrladdr_CPU_wants_data : 0xb6d2a000
 ctrladdr_PRU_data_ready : 0xb6d2a004
 ctrladdr_CPU_new_sched  : 0xb6d2a008
 ctrladdr_PRU_ack_sched  : 0xb6d2a00c
 ctrladdr_CPU_new_period    : 0xb6d2a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2a018
 ctrladdr_SAMPLE_NUM        : 0xb6d2a01c
 ctrladdr_cycle_count_req   : 0xb6d2a020
 ctrladdr_cycle_count        : 0xb6d2a024
 addr_cpu_data_buf : 0xb6d2a028
 addr_pru_data_buf : 0xb6d2a428
 addr_cpu_cmd_buf  : 0xb6d2a828
 addr_pru_cmd_buf  : 0xb6d2aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.054784 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 342.45676093914818)
Current local time and date: Mon Mar 13 11:57:30 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d73000
 ctrladdr_CPU_wants_data : 0xb6d73000
 ctrladdr_PRU_data_ready : 0xb6d73004
 ctrladdr_CPU_new_sched  : 0xb6d73008
 ctrladdr_PRU_ack_sched  : 0xb6d7300c
 ctrladdr_CPU_new_period    : 0xb6d73010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d73014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d73018
 ctrladdr_SAMPLE_NUM        : 0xb6d7301c
 ctrladdr_cycle_count_req   : 0xb6d73020
 ctrladdr_cycle_count        : 0xb6d73024
 addr_cpu_data_buf : 0xb6d73028
 addr_pru_data_buf : 0xb6d73428
 addr_cpu_cmd_buf  : 0xb6d73828
 addr_pru_cmd_buf  : 0xb6d73a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.057216 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 234.79508353318531)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:34 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d07000
 ctrladdr_CPU_wants_data : 0xb6d07000
 ctrladdr_PRU_data_ready : 0xb6d07004
 ctrladdr_CPU_new_sched  : 0xb6d07008
 ctrladdr_PRU_ack_sched  : 0xb6d0700c
 ctrladdr_CPU_new_period    : 0xb6d07010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d07014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d07018
 ctrladdr_SAMPLE_NUM        : 0xb6d0701c
 ctrladdr_cycle_count_req   : 0xb6d07020
 ctrladdr_cycle_count        : 0xb6d07024
 addr_cpu_data_buf : 0xb6d07028
 addr_pru_data_buf : 0xb6d07428
 addr_cpu_cmd_buf  : 0xb6d07828
 addr_pru_cmd_buf  : 0xb6d07a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000702 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 130.97985480855445)
Current local time and date: Mon Mar 13 11:57:38 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dba000
 ctrladdr_CPU_wants_data : 0xb6dba000
 ctrladdr_PRU_data_ready : 0xb6dba004
 ctrladdr_CPU_new_sched  : 0xb6dba008
 ctrladdr_PRU_ack_sched  : 0xb6dba00c
 ctrladdr_CPU_new_period    : 0xb6dba010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dba014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dba018
 ctrladdr_SAMPLE_NUM        : 0xb6dba01c
 ctrladdr_cycle_count_req   : 0xb6dba020
 ctrladdr_cycle_count        : 0xb6dba024
 addr_cpu_data_buf : 0xb6dba028
 addr_pru_data_buf : 0xb6dba428
 addr_cpu_cmd_buf  : 0xb6dba828
 addr_pru_cmd_buf  : 0xb6dbaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000761 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 183.02624695353813)
('===========================niter,dp,sum(dp):', 0, [0.0016345305783843213, 0.0010941898913151245, 2.674686400992527e-05], 0.002755467333709371)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:42 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dce000
 ctrladdr_CPU_wants_data : 0xb6dce000
 ctrladdr_PRU_data_ready : 0xb6dce004
 ctrladdr_CPU_new_sched  : 0xb6dce008
 ctrladdr_PRU_ack_sched  : 0xb6dce00c
 ctrladdr_CPU_new_period    : 0xb6dce010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dce014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dce018
 ctrladdr_SAMPLE_NUM        : 0xb6dce01c
 ctrladdr_cycle_count_req   : 0xb6dce020
 ctrladdr_cycle_count        : 0xb6dce024
 addr_cpu_data_buf : 0xb6dce028
 addr_pru_data_buf : 0xb6dce428
 addr_cpu_cmd_buf  : 0xb6dce828
 addr_pru_cmd_buf  : 0xb6dcea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096101 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 120.44158635488711)
Current local time and date: Mon Mar 13 11:57:45 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d35000
 ctrladdr_CPU_wants_data : 0xb6d35000
 ctrladdr_PRU_data_ready : 0xb6d35004
 ctrladdr_CPU_new_sched  : 0xb6d35008
 ctrladdr_PRU_ack_sched  : 0xb6d3500c
 ctrladdr_CPU_new_period    : 0xb6d35010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d35014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d35018
 ctrladdr_SAMPLE_NUM        : 0xb6d3501c
 ctrladdr_cycle_count_req   : 0xb6d35020
 ctrladdr_cycle_count        : 0xb6d35024
 addr_cpu_data_buf : 0xb6d35028
 addr_pru_data_buf : 0xb6d35428
 addr_cpu_cmd_buf  : 0xb6d35828
 addr_pru_cmd_buf  : 0xb6d35a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.099370 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 262.35914490666801)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:49 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da6000
 ctrladdr_CPU_wants_data : 0xb6da6000
 ctrladdr_PRU_data_ready : 0xb6da6004
 ctrladdr_CPU_new_sched  : 0xb6da6008
 ctrladdr_PRU_ack_sched  : 0xb6da600c
 ctrladdr_CPU_new_period    : 0xb6da6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da6018
 ctrladdr_SAMPLE_NUM        : 0xb6da601c
 ctrladdr_cycle_count_req   : 0xb6da6020
 ctrladdr_cycle_count        : 0xb6da6024
 addr_cpu_data_buf : 0xb6da6028
 addr_pru_data_buf : 0xb6da6428
 addr_cpu_cmd_buf  : 0xb6da6828
 addr_pru_cmd_buf  : 0xb6da6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.054906 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 234.43017352722478)
Current local time and date: Mon Mar 13 11:57:53 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d57000
 ctrladdr_CPU_wants_data : 0xb6d57000
 ctrladdr_PRU_data_ready : 0xb6d57004
 ctrladdr_CPU_new_sched  : 0xb6d57008
 ctrladdr_PRU_ack_sched  : 0xb6d5700c
 ctrladdr_CPU_new_period    : 0xb6d57010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d57014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d57018
 ctrladdr_SAMPLE_NUM        : 0xb6d5701c
 ctrladdr_cycle_count_req   : 0xb6d57020
 ctrladdr_cycle_count        : 0xb6d57024
 addr_cpu_data_buf : 0xb6d57028
 addr_pru_data_buf : 0xb6d57428
 addr_cpu_cmd_buf  : 0xb6d57828
 addr_pru_cmd_buf  : 0xb6d57a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.057094 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 377.45050116807658)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05600000000000001, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:57:57 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd6000
 ctrladdr_CPU_wants_data : 0xb6cd6000
 ctrladdr_PRU_data_ready : 0xb6cd6004
 ctrladdr_CPU_new_sched  : 0xb6cd6008
 ctrladdr_PRU_ack_sched  : 0xb6cd600c
 ctrladdr_CPU_new_period    : 0xb6cd6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd6018
 ctrladdr_SAMPLE_NUM        : 0xb6cd601c
 ctrladdr_cycle_count_req   : 0xb6cd6020
 ctrladdr_cycle_count        : 0xb6cd6024
 addr_cpu_data_buf : 0xb6cd6028
 addr_pru_data_buf : 0xb6cd6428
 addr_cpu_cmd_buf  : 0xb6cd6828
 addr_pru_cmd_buf  : 0xb6cd6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000704 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 142.82680575930371)
Current local time and date: Mon Mar 13 11:58:01 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d5e000
 ctrladdr_CPU_wants_data : 0xb6d5e000
 ctrladdr_PRU_data_ready : 0xb6d5e004
 ctrladdr_CPU_new_sched  : 0xb6d5e008
 ctrladdr_PRU_ack_sched  : 0xb6d5e00c
 ctrladdr_CPU_new_period    : 0xb6d5e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d5e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d5e018
 ctrladdr_SAMPLE_NUM        : 0xb6d5e01c
 ctrladdr_cycle_count_req   : 0xb6d5e020
 ctrladdr_cycle_count        : 0xb6d5e024
 addr_cpu_data_buf : 0xb6d5e028
 addr_pru_data_buf : 0xb6d5e428
 addr_cpu_cmd_buf  : 0xb6d5e828
 addr_pru_cmd_buf  : 0xb6d5ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000758 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 185.31240228665962)
('===========================niter,dp,sum(dp):', 0, [0.0014710775205458893, 0.0009847709021836122, 2.407217760893274e-05], 0.0024799206003384344)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05600000000000001, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:58:04 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d37000
 ctrladdr_CPU_wants_data : 0xb6d37000
 ctrladdr_PRU_data_ready : 0xb6d37004
 ctrladdr_CPU_new_sched  : 0xb6d37008
 ctrladdr_PRU_ack_sched  : 0xb6d3700c
 ctrladdr_CPU_new_period    : 0xb6d37010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d37014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d37018
 ctrladdr_SAMPLE_NUM        : 0xb6d3701c
 ctrladdr_cycle_count_req   : 0xb6d37020
 ctrladdr_cycle_count        : 0xb6d37024
 addr_cpu_data_buf : 0xb6d37028
 addr_pru_data_buf : 0xb6d37428
 addr_cpu_cmd_buf  : 0xb6d37828
 addr_pru_cmd_buf  : 0xb6d37a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096264 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 245.78585564575849)
Current local time and date: Mon Mar 13 11:58:08 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8c000
 ctrladdr_CPU_wants_data : 0xb6d8c000
 ctrladdr_PRU_data_ready : 0xb6d8c004
 ctrladdr_CPU_new_sched  : 0xb6d8c008
 ctrladdr_PRU_ack_sched  : 0xb6d8c00c
 ctrladdr_CPU_new_period    : 0xb6d8c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8c018
 ctrladdr_SAMPLE_NUM        : 0xb6d8c01c
 ctrladdr_cycle_count_req   : 0xb6d8c020
 ctrladdr_cycle_count        : 0xb6d8c024
 addr_cpu_data_buf : 0xb6d8c028
 addr_pru_data_buf : 0xb6d8c428
 addr_cpu_cmd_buf  : 0xb6d8c828
 addr_pru_cmd_buf  : 0xb6d8ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.099206 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 127.38540157605452)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05600000000000001, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:58:12 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8b000
 ctrladdr_CPU_wants_data : 0xb6d8b000
 ctrladdr_PRU_data_ready : 0xb6d8b004
 ctrladdr_CPU_new_sched  : 0xb6d8b008
 ctrladdr_PRU_ack_sched  : 0xb6d8b00c
 ctrladdr_CPU_new_period    : 0xb6d8b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8b018
 ctrladdr_SAMPLE_NUM        : 0xb6d8b01c
 ctrladdr_cycle_count_req   : 0xb6d8b020
 ctrladdr_cycle_count        : 0xb6d8b024
 addr_cpu_data_buf : 0xb6d8b028
 addr_pru_data_buf : 0xb6d8b428
 addr_cpu_cmd_buf  : 0xb6d8b828
 addr_pru_cmd_buf  : 0xb6d8ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055015 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 390.47700453027858)
Current local time and date: Mon Mar 13 11:58:16 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d84000
 ctrladdr_CPU_wants_data : 0xb6d84000
 ctrladdr_PRU_data_ready : 0xb6d84004
 ctrladdr_CPU_new_sched  : 0xb6d84008
 ctrladdr_PRU_ack_sched  : 0xb6d8400c
 ctrladdr_CPU_new_period    : 0xb6d84010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d84014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d84018
 ctrladdr_SAMPLE_NUM        : 0xb6d8401c
 ctrladdr_cycle_count_req   : 0xb6d84020
 ctrladdr_cycle_count        : 0xb6d84024
 addr_cpu_data_buf : 0xb6d84028
 addr_pru_data_buf : 0xb6d84428
 addr_cpu_cmd_buf  : 0xb6d84828
 addr_pru_cmd_buf  : 0xb6d84a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056985 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 145.6511504172544)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:58:20 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dad000
 ctrladdr_CPU_wants_data : 0xb6dad000
 ctrladdr_PRU_data_ready : 0xb6dad004
 ctrladdr_CPU_new_sched  : 0xb6dad008
 ctrladdr_PRU_ack_sched  : 0xb6dad00c
 ctrladdr_CPU_new_period    : 0xb6dad010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dad014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dad018
 ctrladdr_SAMPLE_NUM        : 0xb6dad01c
 ctrladdr_cycle_count_req   : 0xb6dad020
 ctrladdr_cycle_count        : 0xb6dad024
 addr_cpu_data_buf : 0xb6dad028
 addr_pru_data_buf : 0xb6dad428
 addr_cpu_cmd_buf  : 0xb6dad828
 addr_pru_cmd_buf  : 0xb6dada28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000707 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 142.02411623322041)
Current local time and date: Mon Mar 13 11:58:23 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d19000
 ctrladdr_CPU_wants_data : 0xb6d19000
 ctrladdr_PRU_data_ready : 0xb6d19004
 ctrladdr_CPU_new_sched  : 0xb6d19008
 ctrladdr_PRU_ack_sched  : 0xb6d1900c
 ctrladdr_CPU_new_period    : 0xb6d19010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d19014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d19018
 ctrladdr_SAMPLE_NUM        : 0xb6d1901c
 ctrladdr_cycle_count_req   : 0xb6d19020
 ctrladdr_cycle_count        : 0xb6d19024
 addr_cpu_data_buf : 0xb6d19028
 addr_pru_data_buf : 0xb6d19428
 addr_cpu_cmd_buf  : 0xb6d19828
 addr_pru_cmd_buf  : 0xb6d19a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000755 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 160.67081015703639)
('===========================niter,dp,sum(dp):', 0, [0.0013239697684913005, 0.0008862938119652509, 2.1664959848039468e-05], 0.0022319285403045908)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:58:27 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d6a000
 ctrladdr_CPU_wants_data : 0xb6d6a000
 ctrladdr_PRU_data_ready : 0xb6d6a004
 ctrladdr_CPU_new_sched  : 0xb6d6a008
 ctrladdr_PRU_ack_sched  : 0xb6d6a00c
 ctrladdr_CPU_new_period    : 0xb6d6a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d6a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d6a018
 ctrladdr_SAMPLE_NUM        : 0xb6d6a01c
 ctrladdr_cycle_count_req   : 0xb6d6a020
 ctrladdr_cycle_count        : 0xb6d6a024
 addr_cpu_data_buf : 0xb6d6a028
 addr_pru_data_buf : 0xb6d6a428
 addr_cpu_cmd_buf  : 0xb6d6a828
 addr_pru_cmd_buf  : 0xb6d6aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096411 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 116.77917582968291)
Current local time and date: Mon Mar 13 11:58:31 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dcd000
 ctrladdr_CPU_wants_data : 0xb6dcd000
 ctrladdr_PRU_data_ready : 0xb6dcd004
 ctrladdr_CPU_new_sched  : 0xb6dcd008
 ctrladdr_PRU_ack_sched  : 0xb6dcd00c
 ctrladdr_CPU_new_period    : 0xb6dcd010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dcd014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dcd018
 ctrladdr_SAMPLE_NUM        : 0xb6dcd01c
 ctrladdr_cycle_count_req   : 0xb6dcd020
 ctrladdr_cycle_count        : 0xb6dcd024
 addr_cpu_data_buf : 0xb6dcd028
 addr_pru_data_buf : 0xb6dcd428
 addr_cpu_cmd_buf  : 0xb6dcd828
 addr_pru_cmd_buf  : 0xb6dcda28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.099059 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 153.54234248775361)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:58:35 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d61000
 ctrladdr_CPU_wants_data : 0xb6d61000
 ctrladdr_PRU_data_ready : 0xb6d61004
 ctrladdr_CPU_new_sched  : 0xb6d61008
 ctrladdr_PRU_ack_sched  : 0xb6d6100c
 ctrladdr_CPU_new_period    : 0xb6d61010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d61014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d61018
 ctrladdr_SAMPLE_NUM        : 0xb6d6101c
 ctrladdr_cycle_count_req   : 0xb6d61020
 ctrladdr_cycle_count        : 0xb6d61024
 addr_cpu_data_buf : 0xb6d61028
 addr_pru_data_buf : 0xb6d61428
 addr_cpu_cmd_buf  : 0xb6d61828
 addr_pru_cmd_buf  : 0xb6d61a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055114 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 246.89409647126075)
Current local time and date: Mon Mar 13 11:58:38 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d1b000
 ctrladdr_CPU_wants_data : 0xb6d1b000
 ctrladdr_PRU_data_ready : 0xb6d1b004
 ctrladdr_CPU_new_sched  : 0xb6d1b008
 ctrladdr_PRU_ack_sched  : 0xb6d1b00c
 ctrladdr_CPU_new_period    : 0xb6d1b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d1b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d1b018
 ctrladdr_SAMPLE_NUM        : 0xb6d1b01c
 ctrladdr_cycle_count_req   : 0xb6d1b020
 ctrladdr_cycle_count        : 0xb6d1b024
 addr_cpu_data_buf : 0xb6d1b028
 addr_pru_data_buf : 0xb6d1b428
 addr_cpu_cmd_buf  : 0xb6d1b828
 addr_pru_cmd_buf  : 0xb6d1ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056886 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 133.19655158779528)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05600000000000001, -0.0007312199999999998])
Current local time and date: Mon Mar 13 11:58:42 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d60000
 ctrladdr_CPU_wants_data : 0xb6d60000
 ctrladdr_PRU_data_ready : 0xb6d60004
 ctrladdr_CPU_new_sched  : 0xb6d60008
 ctrladdr_PRU_ack_sched  : 0xb6d6000c
 ctrladdr_CPU_new_period    : 0xb6d60010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d60014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d60018
 ctrladdr_SAMPLE_NUM        : 0xb6d6001c
 ctrladdr_cycle_count_req   : 0xb6d60020
 ctrladdr_cycle_count        : 0xb6d60024
 addr_cpu_data_buf : 0xb6d60028
 addr_pru_data_buf : 0xb6d60428
 addr_cpu_cmd_buf  : 0xb6d60828
 addr_pru_cmd_buf  : 0xb6d60a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000710 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 325.29759681601479)
Current local time and date: Mon Mar 13 11:58:46 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d37000
 ctrladdr_CPU_wants_data : 0xb6d37000
 ctrladdr_PRU_data_ready : 0xb6d37004
 ctrladdr_CPU_new_sched  : 0xb6d37008
 ctrladdr_PRU_ack_sched  : 0xb6d3700c
 ctrladdr_CPU_new_period    : 0xb6d37010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d37014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d37018
 ctrladdr_SAMPLE_NUM        : 0xb6d3701c
 ctrladdr_cycle_count_req   : 0xb6d37020
 ctrladdr_cycle_count        : 0xb6d37024
 addr_cpu_data_buf : 0xb6d37028
 addr_pru_data_buf : 0xb6d37428
 addr_cpu_cmd_buf  : 0xb6d37828
 addr_pru_cmd_buf  : 0xb6d37a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000753 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 376.83915045884953)
('===========================niter,dp,sum(dp):', 0, [0.0011915727916421706, 0.0007976644307687258, 1.949846386323552e-05], 0.002008735686274132)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05600000000000001, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:58:50 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cea000
 ctrladdr_CPU_wants_data : 0xb6cea000
 ctrladdr_PRU_data_ready : 0xb6cea004
 ctrladdr_CPU_new_sched  : 0xb6cea008
 ctrladdr_PRU_ack_sched  : 0xb6cea00c
 ctrladdr_CPU_new_period    : 0xb6cea010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cea014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cea018
 ctrladdr_SAMPLE_NUM        : 0xb6cea01c
 ctrladdr_cycle_count_req   : 0xb6cea020
 ctrladdr_cycle_count        : 0xb6cea024
 addr_cpu_data_buf : 0xb6cea028
 addr_pru_data_buf : 0xb6cea428
 addr_cpu_cmd_buf  : 0xb6cea828
 addr_pru_cmd_buf  : 0xb6ceaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096544 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 160.68808778939325)
Current local time and date: Mon Mar 13 11:58:53 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d15000
 ctrladdr_CPU_wants_data : 0xb6d15000
 ctrladdr_PRU_data_ready : 0xb6d15004
 ctrladdr_CPU_new_sched  : 0xb6d15008
 ctrladdr_PRU_ack_sched  : 0xb6d1500c
 ctrladdr_CPU_new_period    : 0xb6d15010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d15014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d15018
 ctrladdr_SAMPLE_NUM        : 0xb6d1501c
 ctrladdr_cycle_count_req   : 0xb6d15020
 ctrladdr_cycle_count        : 0xb6d15024
 addr_cpu_data_buf : 0xb6d15028
 addr_pru_data_buf : 0xb6d15428
 addr_cpu_cmd_buf  : 0xb6d15828
 addr_pru_cmd_buf  : 0xb6d15a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098927 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 281.56162790302005)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05600000000000001, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:58:57 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d53000
 ctrladdr_CPU_wants_data : 0xb6d53000
 ctrladdr_PRU_data_ready : 0xb6d53004
 ctrladdr_CPU_new_sched  : 0xb6d53008
 ctrladdr_PRU_ack_sched  : 0xb6d5300c
 ctrladdr_CPU_new_period    : 0xb6d53010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d53014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d53018
 ctrladdr_SAMPLE_NUM        : 0xb6d5301c
 ctrladdr_cycle_count_req   : 0xb6d53020
 ctrladdr_cycle_count        : 0xb6d53024
 addr_cpu_data_buf : 0xb6d53028
 addr_pru_data_buf : 0xb6d53428
 addr_cpu_cmd_buf  : 0xb6d53828
 addr_pru_cmd_buf  : 0xb6d53a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055202 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 222.59153157652699)
Current local time and date: Mon Mar 13 11:59:01 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc6000
 ctrladdr_CPU_wants_data : 0xb6dc6000
 ctrladdr_PRU_data_ready : 0xb6dc6004
 ctrladdr_CPU_new_sched  : 0xb6dc6008
 ctrladdr_PRU_ack_sched  : 0xb6dc600c
 ctrladdr_CPU_new_period    : 0xb6dc6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc6018
 ctrladdr_SAMPLE_NUM        : 0xb6dc601c
 ctrladdr_cycle_count_req   : 0xb6dc6020
 ctrladdr_cycle_count        : 0xb6dc6024
 addr_cpu_data_buf : 0xb6dc6028
 addr_pru_data_buf : 0xb6dc6428
 addr_cpu_cmd_buf  : 0xb6dc6828
 addr_pru_cmd_buf  : 0xb6dc6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056798 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 175.03836835226957)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:05 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cfd000
 ctrladdr_CPU_wants_data : 0xb6cfd000
 ctrladdr_PRU_data_ready : 0xb6cfd004
 ctrladdr_CPU_new_sched  : 0xb6cfd008
 ctrladdr_PRU_ack_sched  : 0xb6cfd00c
 ctrladdr_CPU_new_period    : 0xb6cfd010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cfd014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cfd018
 ctrladdr_SAMPLE_NUM        : 0xb6cfd01c
 ctrladdr_cycle_count_req   : 0xb6cfd020
 ctrladdr_cycle_count        : 0xb6cfd024
 addr_cpu_data_buf : 0xb6cfd028
 addr_pru_data_buf : 0xb6cfd428
 addr_cpu_cmd_buf  : 0xb6cfd828
 addr_pru_cmd_buf  : 0xb6cfda28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000712 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 160.45582350042551)
Current local time and date: Mon Mar 13 11:59:09 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce6000
 ctrladdr_CPU_wants_data : 0xb6ce6000
 ctrladdr_PRU_data_ready : 0xb6ce6004
 ctrladdr_CPU_new_sched  : 0xb6ce6008
 ctrladdr_PRU_ack_sched  : 0xb6ce600c
 ctrladdr_CPU_new_period    : 0xb6ce6010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce6014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce6018
 ctrladdr_SAMPLE_NUM        : 0xb6ce601c
 ctrladdr_cycle_count_req   : 0xb6ce6020
 ctrladdr_cycle_count        : 0xb6ce6024
 addr_cpu_data_buf : 0xb6ce6028
 addr_pru_data_buf : 0xb6ce6428
 addr_cpu_cmd_buf  : 0xb6ce6828
 addr_pru_cmd_buf  : 0xb6ce6a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000751 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 114.67522015329821)
('===========================niter,dp,sum(dp):', 0, [0.0010724155124779535, 0.0007178979876918532, 1.754861747691197e-05], 0.0018078621176467185)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:12 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d33000
 ctrladdr_CPU_wants_data : 0xb6d33000
 ctrladdr_PRU_data_ready : 0xb6d33004
 ctrladdr_CPU_new_sched  : 0xb6d33008
 ctrladdr_PRU_ack_sched  : 0xb6d3300c
 ctrladdr_CPU_new_period    : 0xb6d33010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d33014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d33018
 ctrladdr_SAMPLE_NUM        : 0xb6d3301c
 ctrladdr_cycle_count_req   : 0xb6d33020
 ctrladdr_cycle_count        : 0xb6d33024
 addr_cpu_data_buf : 0xb6d33028
 addr_pru_data_buf : 0xb6d33428
 addr_cpu_cmd_buf  : 0xb6d33828
 addr_pru_cmd_buf  : 0xb6d33a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096663 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 137.93364502164724)
Current local time and date: Mon Mar 13 11:59:16 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d18000
 ctrladdr_CPU_wants_data : 0xb6d18000
 ctrladdr_PRU_data_ready : 0xb6d18004
 ctrladdr_CPU_new_sched  : 0xb6d18008
 ctrladdr_PRU_ack_sched  : 0xb6d1800c
 ctrladdr_CPU_new_period    : 0xb6d18010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d18014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d18018
 ctrladdr_SAMPLE_NUM        : 0xb6d1801c
 ctrladdr_cycle_count_req   : 0xb6d18020
 ctrladdr_cycle_count        : 0xb6d18024
 addr_cpu_data_buf : 0xb6d18028
 addr_pru_data_buf : 0xb6d18428
 addr_cpu_cmd_buf  : 0xb6d18828
 addr_pru_cmd_buf  : 0xb6d18a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098808 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 197.70880945550135)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:20 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6db5000
 ctrladdr_CPU_wants_data : 0xb6db5000
 ctrladdr_PRU_data_ready : 0xb6db5004
 ctrladdr_CPU_new_sched  : 0xb6db5008
 ctrladdr_PRU_ack_sched  : 0xb6db500c
 ctrladdr_CPU_new_period    : 0xb6db5010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6db5014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6db5018
 ctrladdr_SAMPLE_NUM        : 0xb6db501c
 ctrladdr_cycle_count_req   : 0xb6db5020
 ctrladdr_cycle_count        : 0xb6db5024
 addr_cpu_data_buf : 0xb6db5028
 addr_pru_data_buf : 0xb6db5428
 addr_cpu_cmd_buf  : 0xb6db5828
 addr_pru_cmd_buf  : 0xb6db5a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055282 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 226.54854430058001)
Current local time and date: Mon Mar 13 11:59:24 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d43000
 ctrladdr_CPU_wants_data : 0xb6d43000
 ctrladdr_PRU_data_ready : 0xb6d43004
 ctrladdr_CPU_new_sched  : 0xb6d43008
 ctrladdr_PRU_ack_sched  : 0xb6d4300c
 ctrladdr_CPU_new_period    : 0xb6d43010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d43014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d43018
 ctrladdr_SAMPLE_NUM        : 0xb6d4301c
 ctrladdr_cycle_count_req   : 0xb6d43020
 ctrladdr_cycle_count        : 0xb6d43024
 addr_cpu_data_buf : 0xb6d43028
 addr_pru_data_buf : 0xb6d43428
 addr_cpu_cmd_buf  : 0xb6d43828
 addr_pru_cmd_buf  : 0xb6d43a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056718 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 166.33105408714854)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:27 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cf2000
 ctrladdr_CPU_wants_data : 0xb6cf2000
 ctrladdr_PRU_data_ready : 0xb6cf2004
 ctrladdr_CPU_new_sched  : 0xb6cf2008
 ctrladdr_PRU_ack_sched  : 0xb6cf200c
 ctrladdr_CPU_new_period    : 0xb6cf2010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cf2014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cf2018
 ctrladdr_SAMPLE_NUM        : 0xb6cf201c
 ctrladdr_cycle_count_req   : 0xb6cf2020
 ctrladdr_cycle_count        : 0xb6cf2024
 addr_cpu_data_buf : 0xb6cf2028
 addr_pru_data_buf : 0xb6cf2428
 addr_cpu_cmd_buf  : 0xb6cf2828
 addr_pru_cmd_buf  : 0xb6cf2a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000714 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 331.11686371534216)
Current local time and date: Mon Mar 13 11:59:31 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d30000
 ctrladdr_CPU_wants_data : 0xb6d30000
 ctrladdr_PRU_data_ready : 0xb6d30004
 ctrladdr_CPU_new_sched  : 0xb6d30008
 ctrladdr_PRU_ack_sched  : 0xb6d3000c
 ctrladdr_CPU_new_period    : 0xb6d30010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d30014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d30018
 ctrladdr_SAMPLE_NUM        : 0xb6d3001c
 ctrladdr_cycle_count_req   : 0xb6d30020
 ctrladdr_cycle_count        : 0xb6d30024
 addr_cpu_data_buf : 0xb6d30028
 addr_pru_data_buf : 0xb6d30428
 addr_cpu_cmd_buf  : 0xb6d30828
 addr_pru_cmd_buf  : 0xb6d30a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000749 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 192.20674520891527)
('===========================niter,dp,sum(dp):', 0, [0.0009651739612301581, 0.0006461081889226679, 1.5793755729220772e-05], 0.0016270759058820469)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:35 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d6b000
 ctrladdr_CPU_wants_data : 0xb6d6b000
 ctrladdr_PRU_data_ready : 0xb6d6b004
 ctrladdr_CPU_new_sched  : 0xb6d6b008
 ctrladdr_PRU_ack_sched  : 0xb6d6b00c
 ctrladdr_CPU_new_period    : 0xb6d6b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d6b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d6b018
 ctrladdr_SAMPLE_NUM        : 0xb6d6b01c
 ctrladdr_cycle_count_req   : 0xb6d6b020
 ctrladdr_cycle_count        : 0xb6d6b024
 addr_cpu_data_buf : 0xb6d6b028
 addr_pru_data_buf : 0xb6d6b428
 addr_cpu_cmd_buf  : 0xb6d6b828
 addr_pru_cmd_buf  : 0xb6d6ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096770 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 218.9329262674143)
Current local time and date: Mon Mar 13 11:59:39 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d1b000
 ctrladdr_CPU_wants_data : 0xb6d1b000
 ctrladdr_PRU_data_ready : 0xb6d1b004
 ctrladdr_CPU_new_sched  : 0xb6d1b008
 ctrladdr_PRU_ack_sched  : 0xb6d1b00c
 ctrladdr_CPU_new_period    : 0xb6d1b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d1b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d1b018
 ctrladdr_SAMPLE_NUM        : 0xb6d1b01c
 ctrladdr_cycle_count_req   : 0xb6d1b020
 ctrladdr_cycle_count        : 0xb6d1b024
 addr_cpu_data_buf : 0xb6d1b028
 addr_pru_data_buf : 0xb6d1b428
 addr_cpu_cmd_buf  : 0xb6d1b828
 addr_pru_cmd_buf  : 0xb6d1ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098700 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 302.33003048120872)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:43 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6daa000
 ctrladdr_CPU_wants_data : 0xb6daa000
 ctrladdr_PRU_data_ready : 0xb6daa004
 ctrladdr_CPU_new_sched  : 0xb6daa008
 ctrladdr_PRU_ack_sched  : 0xb6daa00c
 ctrladdr_CPU_new_period    : 0xb6daa010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6daa014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6daa018
 ctrladdr_SAMPLE_NUM        : 0xb6daa01c
 ctrladdr_cycle_count_req   : 0xb6daa020
 ctrladdr_cycle_count        : 0xb6daa024
 addr_cpu_data_buf : 0xb6daa028
 addr_pru_data_buf : 0xb6daa428
 addr_cpu_cmd_buf  : 0xb6daa828
 addr_pru_cmd_buf  : 0xb6daaa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055354 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 331.67087002343419)
Current local time and date: Mon Mar 13 11:59:46 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d6c000
 ctrladdr_CPU_wants_data : 0xb6d6c000
 ctrladdr_PRU_data_ready : 0xb6d6c004
 ctrladdr_CPU_new_sched  : 0xb6d6c008
 ctrladdr_PRU_ack_sched  : 0xb6d6c00c
 ctrladdr_CPU_new_period    : 0xb6d6c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d6c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d6c018
 ctrladdr_SAMPLE_NUM        : 0xb6d6c01c
 ctrladdr_cycle_count_req   : 0xb6d6c020
 ctrladdr_cycle_count        : 0xb6d6c024
 addr_cpu_data_buf : 0xb6d6c028
 addr_pru_data_buf : 0xb6d6c428
 addr_cpu_cmd_buf  : 0xb6d6c828
 addr_pru_cmd_buf  : 0xb6d6ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056646 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 106.4720465733635)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:50 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d27000
 ctrladdr_CPU_wants_data : 0xb6d27000
 ctrladdr_PRU_data_ready : 0xb6d27004
 ctrladdr_CPU_new_sched  : 0xb6d27008
 ctrladdr_PRU_ack_sched  : 0xb6d2700c
 ctrladdr_CPU_new_period    : 0xb6d27010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d27014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d27018
 ctrladdr_SAMPLE_NUM        : 0xb6d2701c
 ctrladdr_cycle_count_req   : 0xb6d27020
 ctrladdr_cycle_count        : 0xb6d27024
 addr_cpu_data_buf : 0xb6d27028
 addr_pru_data_buf : 0xb6d27428
 addr_cpu_cmd_buf  : 0xb6d27828
 addr_pru_cmd_buf  : 0xb6d27a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000715 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 123.77307217671911)
Current local time and date: Mon Mar 13 11:59:54 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d55000
 ctrladdr_CPU_wants_data : 0xb6d55000
 ctrladdr_PRU_data_ready : 0xb6d55004
 ctrladdr_CPU_new_sched  : 0xb6d55008
 ctrladdr_PRU_ack_sched  : 0xb6d5500c
 ctrladdr_CPU_new_period    : 0xb6d55010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d55014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d55018
 ctrladdr_SAMPLE_NUM        : 0xb6d5501c
 ctrladdr_cycle_count_req   : 0xb6d55020
 ctrladdr_cycle_count        : 0xb6d55024
 addr_cpu_data_buf : 0xb6d55028
 addr_pru_data_buf : 0xb6d55428
 addr_cpu_cmd_buf  : 0xb6d55828
 addr_pru_cmd_buf  : 0xb6d55a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000747 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 304.51516969945374)
('===========================niter,dp,sum(dp):', 0, [0.0008686565651071424, 0.0005814973700304011, 1.4214380156298696e-05], 0.001464368315293842)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513930999998, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 11:59:57 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6db2000
 ctrladdr_CPU_wants_data : 0xb6db2000
 ctrladdr_PRU_data_ready : 0xb6db2004
 ctrladdr_CPU_new_sched  : 0xb6db2008
 ctrladdr_PRU_ack_sched  : 0xb6db200c
 ctrladdr_CPU_new_period    : 0xb6db2010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6db2014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6db2018
 ctrladdr_SAMPLE_NUM        : 0xb6db201c
 ctrladdr_cycle_count_req   : 0xb6db2020
 ctrladdr_cycle_count        : 0xb6db2024
 addr_cpu_data_buf : 0xb6db2028
 addr_pru_data_buf : 0xb6db2428
 addr_cpu_cmd_buf  : 0xb6db2828
 addr_pru_cmd_buf  : 0xb6db2a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096866 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 134.39096591601623)
Current local time and date: Mon Mar 13 12:00:01 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d20000
 ctrladdr_CPU_wants_data : 0xb6d20000
 ctrladdr_PRU_data_ready : 0xb6d20004
 ctrladdr_CPU_new_sched  : 0xb6d20008
 ctrladdr_PRU_ack_sched  : 0xb6d2000c
 ctrladdr_CPU_new_period    : 0xb6d20010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d20014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d20018
 ctrladdr_SAMPLE_NUM        : 0xb6d2001c
 ctrladdr_cycle_count_req   : 0xb6d20020
 ctrladdr_cycle_count        : 0xb6d20024
 addr_cpu_data_buf : 0xb6d20028
 addr_pru_data_buf : 0xb6d20428
 addr_cpu_cmd_buf  : 0xb6d20828
 addr_pru_cmd_buf  : 0xb6d20a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098604 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 311.79387703968149)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:05 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc3000
 ctrladdr_CPU_wants_data : 0xb6dc3000
 ctrladdr_PRU_data_ready : 0xb6dc3004
 ctrladdr_CPU_new_sched  : 0xb6dc3008
 ctrladdr_PRU_ack_sched  : 0xb6dc300c
 ctrladdr_CPU_new_period    : 0xb6dc3010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc3014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc3018
 ctrladdr_SAMPLE_NUM        : 0xb6dc301c
 ctrladdr_cycle_count_req   : 0xb6dc3020
 ctrladdr_cycle_count        : 0xb6dc3024
 addr_cpu_data_buf : 0xb6dc3028
 addr_pru_data_buf : 0xb6dc3428
 addr_cpu_cmd_buf  : 0xb6dc3828
 addr_pru_cmd_buf  : 0xb6dc3a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055419 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 191.84023620205875)
Current local time and date: Mon Mar 13 12:00:09 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da8000
 ctrladdr_CPU_wants_data : 0xb6da8000
 ctrladdr_PRU_data_ready : 0xb6da8004
 ctrladdr_CPU_new_sched  : 0xb6da8008
 ctrladdr_PRU_ack_sched  : 0xb6da800c
 ctrladdr_CPU_new_period    : 0xb6da8010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da8014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da8018
 ctrladdr_SAMPLE_NUM        : 0xb6da801c
 ctrladdr_cycle_count_req   : 0xb6da8020
 ctrladdr_cycle_count        : 0xb6da8024
 addr_cpu_data_buf : 0xb6da8028
 addr_pru_data_buf : 0xb6da8428
 addr_cpu_cmd_buf  : 0xb6da8828
 addr_pru_cmd_buf  : 0xb6da8a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056581 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 313.74530897948864)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:13 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d53000
 ctrladdr_CPU_wants_data : 0xb6d53000
 ctrladdr_PRU_data_ready : 0xb6d53004
 ctrladdr_CPU_new_sched  : 0xb6d53008
 ctrladdr_PRU_ack_sched  : 0xb6d5300c
 ctrladdr_CPU_new_period    : 0xb6d53010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d53014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d53018
 ctrladdr_SAMPLE_NUM        : 0xb6d5301c
 ctrladdr_cycle_count_req   : 0xb6d53020
 ctrladdr_cycle_count        : 0xb6d53024
 addr_cpu_data_buf : 0xb6d53028
 addr_pru_data_buf : 0xb6d53428
 addr_cpu_cmd_buf  : 0xb6d53828
 addr_pru_cmd_buf  : 0xb6d53a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000717 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 308.47029385474906)
Current local time and date: Mon Mar 13 12:00:16 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce2000
 ctrladdr_CPU_wants_data : 0xb6ce2000
 ctrladdr_PRU_data_ready : 0xb6ce2004
 ctrladdr_CPU_new_sched  : 0xb6ce2008
 ctrladdr_PRU_ack_sched  : 0xb6ce200c
 ctrladdr_CPU_new_period    : 0xb6ce2010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce2014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce2018
 ctrladdr_SAMPLE_NUM        : 0xb6ce201c
 ctrladdr_cycle_count_req   : 0xb6ce2020
 ctrladdr_cycle_count        : 0xb6ce2024
 addr_cpu_data_buf : 0xb6ce2028
 addr_pru_data_buf : 0xb6ce2428
 addr_cpu_cmd_buf  : 0xb6ce2828
 addr_pru_cmd_buf  : 0xb6ce2a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000745 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 301.82468605894127)
('===========================niter,dp,sum(dp):', 0, [0.0007817909085964281, 0.0005233476330273611, 1.2792942140668827e-05], 0.001317931483764458)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:20 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d92000
 ctrladdr_CPU_wants_data : 0xb6d92000
 ctrladdr_PRU_data_ready : 0xb6d92004
 ctrladdr_CPU_new_sched  : 0xb6d92008
 ctrladdr_PRU_ack_sched  : 0xb6d9200c
 ctrladdr_CPU_new_period    : 0xb6d92010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d92014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d92018
 ctrladdr_SAMPLE_NUM        : 0xb6d9201c
 ctrladdr_cycle_count_req   : 0xb6d92020
 ctrladdr_cycle_count        : 0xb6d92024
 addr_cpu_data_buf : 0xb6d92028
 addr_pru_data_buf : 0xb6d92428
 addr_cpu_cmd_buf  : 0xb6d92828
 addr_pru_cmd_buf  : 0xb6d92a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.096953 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 126.77228761141545)
Current local time and date: Mon Mar 13 12:00:24 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d0c000
 ctrladdr_CPU_wants_data : 0xb6d0c000
 ctrladdr_PRU_data_ready : 0xb6d0c004
 ctrladdr_CPU_new_sched  : 0xb6d0c008
 ctrladdr_PRU_ack_sched  : 0xb6d0c00c
 ctrladdr_CPU_new_period    : 0xb6d0c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d0c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d0c018
 ctrladdr_SAMPLE_NUM        : 0xb6d0c01c
 ctrladdr_cycle_count_req   : 0xb6d0c020
 ctrladdr_cycle_count        : 0xb6d0c024
 addr_cpu_data_buf : 0xb6d0c028
 addr_pru_data_buf : 0xb6d0c428
 addr_cpu_cmd_buf  : 0xb6d0c828
 addr_pru_cmd_buf  : 0xb6d0ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098517 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 271.96750111345654)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:28 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2f000
 ctrladdr_CPU_wants_data : 0xb6d2f000
 ctrladdr_PRU_data_ready : 0xb6d2f004
 ctrladdr_CPU_new_sched  : 0xb6d2f008
 ctrladdr_PRU_ack_sched  : 0xb6d2f00c
 ctrladdr_CPU_new_period    : 0xb6d2f010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2f014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2f018
 ctrladdr_SAMPLE_NUM        : 0xb6d2f01c
 ctrladdr_cycle_count_req   : 0xb6d2f020
 ctrladdr_cycle_count        : 0xb6d2f024
 addr_cpu_data_buf : 0xb6d2f028
 addr_pru_data_buf : 0xb6d2f428
 addr_cpu_cmd_buf  : 0xb6d2f828
 addr_pru_cmd_buf  : 0xb6d2fa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055477 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 308.3474615326499)
Current local time and date: Mon Mar 13 12:00:31 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d4b000
 ctrladdr_CPU_wants_data : 0xb6d4b000
 ctrladdr_PRU_data_ready : 0xb6d4b004
 ctrladdr_CPU_new_sched  : 0xb6d4b008
 ctrladdr_PRU_ack_sched  : 0xb6d4b00c
 ctrladdr_CPU_new_period    : 0xb6d4b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d4b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d4b018
 ctrladdr_SAMPLE_NUM        : 0xb6d4b01c
 ctrladdr_cycle_count_req   : 0xb6d4b020
 ctrladdr_cycle_count        : 0xb6d4b024
 addr_cpu_data_buf : 0xb6d4b028
 addr_pru_data_buf : 0xb6d4b428
 addr_cpu_cmd_buf  : 0xb6d4b828
 addr_pru_cmd_buf  : 0xb6d4ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056523 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 143.5524344934494)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:35 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cef000
 ctrladdr_CPU_wants_data : 0xb6cef000
 ctrladdr_PRU_data_ready : 0xb6cef004
 ctrladdr_CPU_new_sched  : 0xb6cef008
 ctrladdr_PRU_ack_sched  : 0xb6cef00c
 ctrladdr_CPU_new_period    : 0xb6cef010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cef014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cef018
 ctrladdr_SAMPLE_NUM        : 0xb6cef01c
 ctrladdr_cycle_count_req   : 0xb6cef020
 ctrladdr_cycle_count        : 0xb6cef024
 addr_cpu_data_buf : 0xb6cef028
 addr_pru_data_buf : 0xb6cef428
 addr_cpu_cmd_buf  : 0xb6cef828
 addr_pru_cmd_buf  : 0xb6cefa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000718 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 144.346909608586)
Current local time and date: Mon Mar 13 12:00:39 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d51000
 ctrladdr_CPU_wants_data : 0xb6d51000
 ctrladdr_PRU_data_ready : 0xb6d51004
 ctrladdr_CPU_new_sched  : 0xb6d51008
 ctrladdr_PRU_ack_sched  : 0xb6d5100c
 ctrladdr_CPU_new_period    : 0xb6d51010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d51014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d51018
 ctrladdr_SAMPLE_NUM        : 0xb6d5101c
 ctrladdr_cycle_count_req   : 0xb6d51020
 ctrladdr_cycle_count        : 0xb6d51024
 addr_cpu_data_buf : 0xb6d51028
 addr_pru_data_buf : 0xb6d51428
 addr_cpu_cmd_buf  : 0xb6d51828
 addr_pru_cmd_buf  : 0xb6d51a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000744 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 152.56036244912534)
('===========================niter,dp,sum(dp):', 0, [0.0007036118177367853, 0.000471012869724625, 1.1513647926601945e-05], 0.0011861383353880123)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:43 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d33000
 ctrladdr_CPU_wants_data : 0xb6d33000
 ctrladdr_PRU_data_ready : 0xb6d33004
 ctrladdr_CPU_new_sched  : 0xb6d33008
 ctrladdr_PRU_ack_sched  : 0xb6d3300c
 ctrladdr_CPU_new_period    : 0xb6d33010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d33014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d33018
 ctrladdr_SAMPLE_NUM        : 0xb6d3301c
 ctrladdr_cycle_count_req   : 0xb6d33020
 ctrladdr_cycle_count        : 0xb6d33024
 addr_cpu_data_buf : 0xb6d33028
 addr_pru_data_buf : 0xb6d33428
 addr_cpu_cmd_buf  : 0xb6d33828
 addr_pru_cmd_buf  : 0xb6d33a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097032 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 335.10173090573164)
Current local time and date: Mon Mar 13 12:00:47 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6db4000
 ctrladdr_CPU_wants_data : 0xb6db4000
 ctrladdr_PRU_data_ready : 0xb6db4004
 ctrladdr_CPU_new_sched  : 0xb6db4008
 ctrladdr_PRU_ack_sched  : 0xb6db400c
 ctrladdr_CPU_new_period    : 0xb6db4010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6db4014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6db4018
 ctrladdr_SAMPLE_NUM        : 0xb6db401c
 ctrladdr_cycle_count_req   : 0xb6db4020
 ctrladdr_cycle_count        : 0xb6db4024
 addr_cpu_data_buf : 0xb6db4028
 addr_pru_data_buf : 0xb6db4428
 addr_cpu_cmd_buf  : 0xb6db4828
 addr_pru_cmd_buf  : 0xb6db4a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098439 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 283.71750228339431)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:50 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d02000
 ctrladdr_CPU_wants_data : 0xb6d02000
 ctrladdr_PRU_data_ready : 0xb6d02004
 ctrladdr_CPU_new_sched  : 0xb6d02008
 ctrladdr_PRU_ack_sched  : 0xb6d0200c
 ctrladdr_CPU_new_period    : 0xb6d02010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d02014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d02018
 ctrladdr_SAMPLE_NUM        : 0xb6d0201c
 ctrladdr_cycle_count_req   : 0xb6d02020
 ctrladdr_cycle_count        : 0xb6d02024
 addr_cpu_data_buf : 0xb6d02028
 addr_pru_data_buf : 0xb6d02428
 addr_cpu_cmd_buf  : 0xb6d02828
 addr_pru_cmd_buf  : 0xb6d02a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055529 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 170.65856447393537)
Current local time and date: Mon Mar 13 12:00:54 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d02000
 ctrladdr_CPU_wants_data : 0xb6d02000
 ctrladdr_PRU_data_ready : 0xb6d02004
 ctrladdr_CPU_new_sched  : 0xb6d02008
 ctrladdr_PRU_ack_sched  : 0xb6d0200c
 ctrladdr_CPU_new_period    : 0xb6d02010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d02014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d02018
 ctrladdr_SAMPLE_NUM        : 0xb6d0201c
 ctrladdr_cycle_count_req   : 0xb6d02020
 ctrladdr_cycle_count        : 0xb6d02024
 addr_cpu_data_buf : 0xb6d02028
 addr_pru_data_buf : 0xb6d02428
 addr_cpu_cmd_buf  : 0xb6d02828
 addr_pru_cmd_buf  : 0xb6d02a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056471 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 228.35884141107371)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:00:58 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d85000
 ctrladdr_CPU_wants_data : 0xb6d85000
 ctrladdr_PRU_data_ready : 0xb6d85004
 ctrladdr_CPU_new_sched  : 0xb6d85008
 ctrladdr_PRU_ack_sched  : 0xb6d8500c
 ctrladdr_CPU_new_period    : 0xb6d85010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d85014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d85018
 ctrladdr_SAMPLE_NUM        : 0xb6d8501c
 ctrladdr_cycle_count_req   : 0xb6d85020
 ctrladdr_cycle_count        : 0xb6d85024
 addr_cpu_data_buf : 0xb6d85028
 addr_pru_data_buf : 0xb6d85428
 addr_cpu_cmd_buf  : 0xb6d85828
 addr_pru_cmd_buf  : 0xb6d85a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000720 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 144.81750368048503)
Current local time and date: Mon Mar 13 12:01:02 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d01000
 ctrladdr_CPU_wants_data : 0xb6d01000
 ctrladdr_PRU_data_ready : 0xb6d01004
 ctrladdr_CPU_new_sched  : 0xb6d01008
 ctrladdr_PRU_ack_sched  : 0xb6d0100c
 ctrladdr_CPU_new_period    : 0xb6d01010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d01014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d01018
 ctrladdr_SAMPLE_NUM        : 0xb6d0101c
 ctrladdr_cycle_count_req   : 0xb6d01020
 ctrladdr_cycle_count        : 0xb6d01024
 addr_cpu_data_buf : 0xb6d01028
 addr_pru_data_buf : 0xb6d01428
 addr_cpu_cmd_buf  : 0xb6d01828
 addr_pru_cmd_buf  : 0xb6d01a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000743 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 129.71181221239365)
('===========================niter,dp,sum(dp):', 0, [0.0006332506359631069, 0.0004239115827521625, 1.0362283133941751e-05], 0.001067524501849211)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:05 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d2c000
 ctrladdr_CPU_wants_data : 0xb6d2c000
 ctrladdr_PRU_data_ready : 0xb6d2c004
 ctrladdr_CPU_new_sched  : 0xb6d2c008
 ctrladdr_PRU_ack_sched  : 0xb6d2c00c
 ctrladdr_CPU_new_period    : 0xb6d2c010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d2c014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d2c018
 ctrladdr_SAMPLE_NUM        : 0xb6d2c01c
 ctrladdr_cycle_count_req   : 0xb6d2c020
 ctrladdr_cycle_count        : 0xb6d2c024
 addr_cpu_data_buf : 0xb6d2c028
 addr_pru_data_buf : 0xb6d2c428
 addr_cpu_cmd_buf  : 0xb6d2c828
 addr_pru_cmd_buf  : 0xb6d2ca28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097102 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 132.2518814048276)
Current local time and date: Mon Mar 13 12:01:09 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce7000
 ctrladdr_CPU_wants_data : 0xb6ce7000
 ctrladdr_PRU_data_ready : 0xb6ce7004
 ctrladdr_CPU_new_sched  : 0xb6ce7008
 ctrladdr_PRU_ack_sched  : 0xb6ce700c
 ctrladdr_CPU_new_period    : 0xb6ce7010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce7014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce7018
 ctrladdr_SAMPLE_NUM        : 0xb6ce701c
 ctrladdr_cycle_count_req   : 0xb6ce7020
 ctrladdr_cycle_count        : 0xb6ce7024
 addr_cpu_data_buf : 0xb6ce7028
 addr_pru_data_buf : 0xb6ce7428
 addr_cpu_cmd_buf  : 0xb6ce7828
 addr_pru_cmd_buf  : 0xb6ce7a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098368 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 284.35949310894767)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:13 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8a000
 ctrladdr_CPU_wants_data : 0xb6d8a000
 ctrladdr_PRU_data_ready : 0xb6d8a004
 ctrladdr_CPU_new_sched  : 0xb6d8a008
 ctrladdr_PRU_ack_sched  : 0xb6d8a00c
 ctrladdr_CPU_new_period    : 0xb6d8a010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8a014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8a018
 ctrladdr_SAMPLE_NUM        : 0xb6d8a01c
 ctrladdr_cycle_count_req   : 0xb6d8a020
 ctrladdr_cycle_count        : 0xb6d8a024
 addr_cpu_data_buf : 0xb6d8a028
 addr_pru_data_buf : 0xb6d8a428
 addr_cpu_cmd_buf  : 0xb6d8a828
 addr_pru_cmd_buf  : 0xb6d8aa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055576 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 145.69940535694448)
Current local time and date: Mon Mar 13 12:01:17 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd9000
 ctrladdr_CPU_wants_data : 0xb6cd9000
 ctrladdr_PRU_data_ready : 0xb6cd9004
 ctrladdr_CPU_new_sched  : 0xb6cd9008
 ctrladdr_PRU_ack_sched  : 0xb6cd900c
 ctrladdr_CPU_new_period    : 0xb6cd9010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd9014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd9018
 ctrladdr_SAMPLE_NUM        : 0xb6cd901c
 ctrladdr_cycle_count_req   : 0xb6cd9020
 ctrladdr_cycle_count        : 0xb6cd9024
 addr_cpu_data_buf : 0xb6cd9028
 addr_pru_data_buf : 0xb6cd9428
 addr_cpu_cmd_buf  : 0xb6cd9828
 addr_pru_cmd_buf  : 0xb6cd9a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056424 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 118.25460360114734)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05600000000000001, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:20 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6ce9000
 ctrladdr_CPU_wants_data : 0xb6ce9000
 ctrladdr_PRU_data_ready : 0xb6ce9004
 ctrladdr_CPU_new_sched  : 0xb6ce9008
 ctrladdr_PRU_ack_sched  : 0xb6ce900c
 ctrladdr_CPU_new_period    : 0xb6ce9010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6ce9014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6ce9018
 ctrladdr_SAMPLE_NUM        : 0xb6ce901c
 ctrladdr_cycle_count_req   : 0xb6ce9020
 ctrladdr_cycle_count        : 0xb6ce9024
 addr_cpu_data_buf : 0xb6ce9028
 addr_pru_data_buf : 0xb6ce9428
 addr_cpu_cmd_buf  : 0xb6ce9828
 addr_pru_cmd_buf  : 0xb6ce9a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000721 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 203.0336273712395)
Current local time and date: Mon Mar 13 12:01:24 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d13000
 ctrladdr_CPU_wants_data : 0xb6d13000
 ctrladdr_PRU_data_ready : 0xb6d13004
 ctrladdr_CPU_new_sched  : 0xb6d13008
 ctrladdr_PRU_ack_sched  : 0xb6d1300c
 ctrladdr_CPU_new_period    : 0xb6d13010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d13014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d13018
 ctrladdr_SAMPLE_NUM        : 0xb6d1301c
 ctrladdr_cycle_count_req   : 0xb6d13020
 ctrladdr_cycle_count        : 0xb6d13024
 addr_cpu_data_buf : 0xb6d13028
 addr_pru_data_buf : 0xb6d13428
 addr_cpu_cmd_buf  : 0xb6d13828
 addr_pru_cmd_buf  : 0xb6d13a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000742 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 176.98129257537946)
('===========================niter,dp,sum(dp):', 0, [0.0005699255723667962, 0.00038152042447694626, 9.326054820547577e-06], 0.0009607720516642901)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931, -0.05600000000000001, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:28 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d17000
 ctrladdr_CPU_wants_data : 0xb6d17000
 ctrladdr_PRU_data_ready : 0xb6d17004
 ctrladdr_CPU_new_sched  : 0xb6d17008
 ctrladdr_PRU_ack_sched  : 0xb6d1700c
 ctrladdr_CPU_new_period    : 0xb6d17010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d17014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d17018
 ctrladdr_SAMPLE_NUM        : 0xb6d1701c
 ctrladdr_cycle_count_req   : 0xb6d17020
 ctrladdr_cycle_count        : 0xb6d17024
 addr_cpu_data_buf : 0xb6d17028
 addr_pru_data_buf : 0xb6d17428
 addr_cpu_cmd_buf  : 0xb6d17828
 addr_pru_cmd_buf  : 0xb6d17a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097165 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 150.11152564020983)
Current local time and date: Mon Mar 13 12:01:32 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d50000
 ctrladdr_CPU_wants_data : 0xb6d50000
 ctrladdr_PRU_data_ready : 0xb6d50004
 ctrladdr_CPU_new_sched  : 0xb6d50008
 ctrladdr_PRU_ack_sched  : 0xb6d5000c
 ctrladdr_CPU_new_period    : 0xb6d50010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d50014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d50018
 ctrladdr_SAMPLE_NUM        : 0xb6d5001c
 ctrladdr_cycle_count_req   : 0xb6d50020
 ctrladdr_cycle_count        : 0xb6d50024
 addr_cpu_data_buf : 0xb6d50028
 addr_pru_data_buf : 0xb6d50428
 addr_cpu_cmd_buf  : 0xb6d50828
 addr_pru_cmd_buf  : 0xb6d50a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098305 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 392.7775436530996)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.05600000000000001, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:36 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d88000
 ctrladdr_CPU_wants_data : 0xb6d88000
 ctrladdr_PRU_data_ready : 0xb6d88004
 ctrladdr_CPU_new_sched  : 0xb6d88008
 ctrladdr_PRU_ack_sched  : 0xb6d8800c
 ctrladdr_CPU_new_period    : 0xb6d88010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d88014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d88018
 ctrladdr_SAMPLE_NUM        : 0xb6d8801c
 ctrladdr_cycle_count_req   : 0xb6d88020
 ctrladdr_cycle_count        : 0xb6d88024
 addr_cpu_data_buf : 0xb6d88028
 addr_pru_data_buf : 0xb6d88428
 addr_cpu_cmd_buf  : 0xb6d88828
 addr_pru_cmd_buf  : 0xb6d88a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055618 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 118.05947431070763)
Current local time and date: Mon Mar 13 12:01:39 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6db2000
 ctrladdr_CPU_wants_data : 0xb6db2000
 ctrladdr_PRU_data_ready : 0xb6db2004
 ctrladdr_CPU_new_sched  : 0xb6db2008
 ctrladdr_PRU_ack_sched  : 0xb6db200c
 ctrladdr_CPU_new_period    : 0xb6db2010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6db2014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6db2018
 ctrladdr_SAMPLE_NUM        : 0xb6db201c
 ctrladdr_cycle_count_req   : 0xb6db2020
 ctrladdr_cycle_count        : 0xb6db2024
 addr_cpu_data_buf : 0xb6db2028
 addr_pru_data_buf : 0xb6db2428
 addr_cpu_cmd_buf  : 0xb6db2828
 addr_pru_cmd_buf  : 0xb6db2a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056382 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 116.07511195916757)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:43 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d03000
 ctrladdr_CPU_wants_data : 0xb6d03000
 ctrladdr_PRU_data_ready : 0xb6d03004
 ctrladdr_CPU_new_sched  : 0xb6d03008
 ctrladdr_PRU_ack_sched  : 0xb6d0300c
 ctrladdr_CPU_new_period    : 0xb6d03010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d03014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d03018
 ctrladdr_SAMPLE_NUM        : 0xb6d0301c
 ctrladdr_cycle_count_req   : 0xb6d03020
 ctrladdr_cycle_count        : 0xb6d03024
 addr_cpu_data_buf : 0xb6d03028
 addr_pru_data_buf : 0xb6d03428
 addr_cpu_cmd_buf  : 0xb6d03828
 addr_pru_cmd_buf  : 0xb6d03a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000722 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 111.21714460434826)
Current local time and date: Mon Mar 13 12:01:47 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d5b000
 ctrladdr_CPU_wants_data : 0xb6d5b000
 ctrladdr_PRU_data_ready : 0xb6d5b004
 ctrladdr_CPU_new_sched  : 0xb6d5b008
 ctrladdr_PRU_ack_sched  : 0xb6d5b00c
 ctrladdr_CPU_new_period    : 0xb6d5b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d5b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d5b018
 ctrladdr_SAMPLE_NUM        : 0xb6d5b01c
 ctrladdr_cycle_count_req   : 0xb6d5b020
 ctrladdr_cycle_count        : 0xb6d5b024
 addr_cpu_data_buf : 0xb6d5b028
 addr_pru_data_buf : 0xb6d5b428
 addr_cpu_cmd_buf  : 0xb6d5b828
 addr_pru_cmd_buf  : 0xb6d5ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000741 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 117.77807680668265)
('===========================niter,dp,sum(dp):', 0, [0.0005129330151301166, 0.00034336838202925164, 8.39344933849282e-06], 0.000864694846497861)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:51 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d23000
 ctrladdr_CPU_wants_data : 0xb6d23000
 ctrladdr_PRU_data_ready : 0xb6d23004
 ctrladdr_CPU_new_sched  : 0xb6d23008
 ctrladdr_PRU_ack_sched  : 0xb6d2300c
 ctrladdr_CPU_new_period    : 0xb6d23010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d23014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d23018
 ctrladdr_SAMPLE_NUM        : 0xb6d2301c
 ctrladdr_cycle_count_req   : 0xb6d23020
 ctrladdr_cycle_count        : 0xb6d23024
 addr_cpu_data_buf : 0xb6d23028
 addr_pru_data_buf : 0xb6d23428
 addr_cpu_cmd_buf  : 0xb6d23828
 addr_pru_cmd_buf  : 0xb6d23a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097222 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 131.58115397654444)
Current local time and date: Mon Mar 13 12:01:54 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d99000
 ctrladdr_CPU_wants_data : 0xb6d99000
 ctrladdr_PRU_data_ready : 0xb6d99004
 ctrladdr_CPU_new_sched  : 0xb6d99008
 ctrladdr_PRU_ack_sched  : 0xb6d9900c
 ctrladdr_CPU_new_period    : 0xb6d99010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d99014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d99018
 ctrladdr_SAMPLE_NUM        : 0xb6d9901c
 ctrladdr_cycle_count_req   : 0xb6d99020
 ctrladdr_cycle_count        : 0xb6d99024
 addr_cpu_data_buf : 0xb6d99028
 addr_pru_data_buf : 0xb6d99428
 addr_cpu_cmd_buf  : 0xb6d99828
 addr_pru_cmd_buf  : 0xb6d99a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098248 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 220.24557141270486)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:01:58 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d74000
 ctrladdr_CPU_wants_data : 0xb6d74000
 ctrladdr_PRU_data_ready : 0xb6d74004
 ctrladdr_CPU_new_sched  : 0xb6d74008
 ctrladdr_PRU_ack_sched  : 0xb6d7400c
 ctrladdr_CPU_new_period    : 0xb6d74010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d74014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d74018
 ctrladdr_SAMPLE_NUM        : 0xb6d7401c
 ctrladdr_cycle_count_req   : 0xb6d74020
 ctrladdr_cycle_count        : 0xb6d74024
 addr_cpu_data_buf : 0xb6d74028
 addr_pru_data_buf : 0xb6d74428
 addr_cpu_cmd_buf  : 0xb6d74828
 addr_pru_cmd_buf  : 0xb6d74a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055657 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 216.19591365995981)
Current local time and date: Mon Mar 13 12:02:02 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d03000
 ctrladdr_CPU_wants_data : 0xb6d03000
 ctrladdr_PRU_data_ready : 0xb6d03004
 ctrladdr_CPU_new_sched  : 0xb6d03008
 ctrladdr_PRU_ack_sched  : 0xb6d0300c
 ctrladdr_CPU_new_period    : 0xb6d03010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d03014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d03018
 ctrladdr_SAMPLE_NUM        : 0xb6d0301c
 ctrladdr_cycle_count_req   : 0xb6d03020
 ctrladdr_cycle_count        : 0xb6d03024
 addr_cpu_data_buf : 0xb6d03028
 addr_pru_data_buf : 0xb6d03428
 addr_cpu_cmd_buf  : 0xb6d03828
 addr_pru_cmd_buf  : 0xb6d03a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056343 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 239.59668706218702)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:02:06 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6db0000
 ctrladdr_CPU_wants_data : 0xb6db0000
 ctrladdr_PRU_data_ready : 0xb6db0004
 ctrladdr_CPU_new_sched  : 0xb6db0008
 ctrladdr_PRU_ack_sched  : 0xb6db000c
 ctrladdr_CPU_new_period    : 0xb6db0010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6db0014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6db0018
 ctrladdr_SAMPLE_NUM        : 0xb6db001c
 ctrladdr_cycle_count_req   : 0xb6db0020
 ctrladdr_cycle_count        : 0xb6db0024
 addr_cpu_data_buf : 0xb6db0028
 addr_pru_data_buf : 0xb6db0428
 addr_cpu_cmd_buf  : 0xb6db0828
 addr_pru_cmd_buf  : 0xb6db0a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000723 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 138.98327477549981)
Current local time and date: Mon Mar 13 12:02:09 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cfb000
 ctrladdr_CPU_wants_data : 0xb6cfb000
 ctrladdr_PRU_data_ready : 0xb6cfb004
 ctrladdr_CPU_new_sched  : 0xb6cfb008
 ctrladdr_PRU_ack_sched  : 0xb6cfb00c
 ctrladdr_CPU_new_period    : 0xb6cfb010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cfb014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cfb018
 ctrladdr_SAMPLE_NUM        : 0xb6cfb01c
 ctrladdr_cycle_count_req   : 0xb6cfb020
 ctrladdr_cycle_count        : 0xb6cfb024
 addr_cpu_data_buf : 0xb6cfb028
 addr_pru_data_buf : 0xb6cfb428
 addr_cpu_cmd_buf  : 0xb6cfb828
 addr_pru_cmd_buf  : 0xb6cfba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000740 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 156.31591198436519)
('===========================niter,dp,sum(dp):', 0, [0.00046163971361710493, 0.0003090315438263265, 7.554104404643538e-06], 0.0007782253618480751)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:02:13 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d20000
 ctrladdr_CPU_wants_data : 0xb6d20000
 ctrladdr_PRU_data_ready : 0xb6d20004
 ctrladdr_CPU_new_sched  : 0xb6d20008
 ctrladdr_PRU_ack_sched  : 0xb6d2000c
 ctrladdr_CPU_new_period    : 0xb6d20010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d20014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d20018
 ctrladdr_SAMPLE_NUM        : 0xb6d2001c
 ctrladdr_cycle_count_req   : 0xb6d20020
 ctrladdr_cycle_count        : 0xb6d20024
 addr_cpu_data_buf : 0xb6d20028
 addr_pru_data_buf : 0xb6d20428
 addr_cpu_cmd_buf  : 0xb6d20828
 addr_pru_cmd_buf  : 0xb6d20a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097273 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 121.23007465167711)
Current local time and date: Mon Mar 13 12:02:17 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6da8000
 ctrladdr_CPU_wants_data : 0xb6da8000
 ctrladdr_PRU_data_ready : 0xb6da8004
 ctrladdr_CPU_new_sched  : 0xb6da8008
 ctrladdr_PRU_ack_sched  : 0xb6da800c
 ctrladdr_CPU_new_period    : 0xb6da8010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6da8014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6da8018
 ctrladdr_SAMPLE_NUM        : 0xb6da801c
 ctrladdr_cycle_count_req   : 0xb6da8020
 ctrladdr_cycle_count        : 0xb6da8024
 addr_cpu_data_buf : 0xb6da8028
 addr_pru_data_buf : 0xb6da8428
 addr_cpu_cmd_buf  : 0xb6da8828
 addr_pru_cmd_buf  : 0xb6da8a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098197 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 226.2060949559681)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:02:21 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d3e000
 ctrladdr_CPU_wants_data : 0xb6d3e000
 ctrladdr_PRU_data_ready : 0xb6d3e004
 ctrladdr_CPU_new_sched  : 0xb6d3e008
 ctrladdr_PRU_ack_sched  : 0xb6d3e00c
 ctrladdr_CPU_new_period    : 0xb6d3e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d3e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d3e018
 ctrladdr_SAMPLE_NUM        : 0xb6d3e01c
 ctrladdr_cycle_count_req   : 0xb6d3e020
 ctrladdr_cycle_count        : 0xb6d3e024
 addr_cpu_data_buf : 0xb6d3e028
 addr_pru_data_buf : 0xb6d3e428
 addr_cpu_cmd_buf  : 0xb6d3e828
 addr_pru_cmd_buf  : 0xb6d3ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055691 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 303.41230847474964)
Current local time and date: Mon Mar 13 12:02:25 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dc0000
 ctrladdr_CPU_wants_data : 0xb6dc0000
 ctrladdr_PRU_data_ready : 0xb6dc0004
 ctrladdr_CPU_new_sched  : 0xb6dc0008
 ctrladdr_PRU_ack_sched  : 0xb6dc000c
 ctrladdr_CPU_new_period    : 0xb6dc0010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dc0014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dc0018
 ctrladdr_SAMPLE_NUM        : 0xb6dc001c
 ctrladdr_cycle_count_req   : 0xb6dc0020
 ctrladdr_cycle_count        : 0xb6dc0024
 addr_cpu_data_buf : 0xb6dc0028
 addr_pru_data_buf : 0xb6dc0428
 addr_cpu_cmd_buf  : 0xb6dc0828
 addr_pru_cmd_buf  : 0xb6dc0a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056309 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 158.12473501086117)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999998])
Current local time and date: Mon Mar 13 12:02:28 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d56000
 ctrladdr_CPU_wants_data : 0xb6d56000
 ctrladdr_PRU_data_ready : 0xb6d56004
 ctrladdr_CPU_new_sched  : 0xb6d56008
 ctrladdr_PRU_ack_sched  : 0xb6d5600c
 ctrladdr_CPU_new_period    : 0xb6d56010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d56014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d56018
 ctrladdr_SAMPLE_NUM        : 0xb6d5601c
 ctrladdr_cycle_count_req   : 0xb6d56020
 ctrladdr_cycle_count        : 0xb6d56024
 addr_cpu_data_buf : 0xb6d56028
 addr_pru_data_buf : 0xb6d56428
 addr_cpu_cmd_buf  : 0xb6d56828
 addr_pru_cmd_buf  : 0xb6d56a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000724 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 348.08650240963709)
Current local time and date: Mon Mar 13 12:02:32 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6dd0000
 ctrladdr_CPU_wants_data : 0xb6dd0000
 ctrladdr_PRU_data_ready : 0xb6dd0004
 ctrladdr_CPU_new_sched  : 0xb6dd0008
 ctrladdr_PRU_ack_sched  : 0xb6dd000c
 ctrladdr_CPU_new_period    : 0xb6dd0010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6dd0014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6dd0018
 ctrladdr_SAMPLE_NUM        : 0xb6dd001c
 ctrladdr_cycle_count_req   : 0xb6dd0020
 ctrladdr_cycle_count        : 0xb6dd0024
 addr_cpu_data_buf : 0xb6dd0028
 addr_pru_data_buf : 0xb6dd0428
 addr_cpu_cmd_buf  : 0xb6dd0828
 addr_pru_cmd_buf  : 0xb6dd0a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000739 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 324.68460052620401)
('===========================niter,dp,sum(dp):', 0, [0.00041547574225539447, 0.00027812838944369386, 6.798693964179184e-06], 0.0007004028256632675)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:02:36 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd5000
 ctrladdr_CPU_wants_data : 0xb6cd5000
 ctrladdr_PRU_data_ready : 0xb6cd5004
 ctrladdr_CPU_new_sched  : 0xb6cd5008
 ctrladdr_PRU_ack_sched  : 0xb6cd500c
 ctrladdr_CPU_new_period    : 0xb6cd5010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd5014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd5018
 ctrladdr_SAMPLE_NUM        : 0xb6cd501c
 ctrladdr_cycle_count_req   : 0xb6cd5020
 ctrladdr_cycle_count        : 0xb6cd5024
 addr_cpu_data_buf : 0xb6cd5028
 addr_pru_data_buf : 0xb6cd5428
 addr_cpu_cmd_buf  : 0xb6cd5828
 addr_pru_cmd_buf  : 0xb6cd5a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097320 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 187.98610407613563)
Current local time and date: Mon Mar 13 12:02:40 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d82000
 ctrladdr_CPU_wants_data : 0xb6d82000
 ctrladdr_PRU_data_ready : 0xb6d82004
 ctrladdr_CPU_new_sched  : 0xb6d82008
 ctrladdr_PRU_ack_sched  : 0xb6d8200c
 ctrladdr_CPU_new_period    : 0xb6d82010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d82014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d82018
 ctrladdr_SAMPLE_NUM        : 0xb6d8201c
 ctrladdr_cycle_count_req   : 0xb6d82020
 ctrladdr_cycle_count        : 0xb6d82024
 addr_cpu_data_buf : 0xb6d82028
 addr_pru_data_buf : 0xb6d82428
 addr_cpu_cmd_buf  : 0xb6d82828
 addr_pru_cmd_buf  : 0xb6d82a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098151 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 209.24330799724262)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:02:43 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d50000
 ctrladdr_CPU_wants_data : 0xb6d50000
 ctrladdr_PRU_data_ready : 0xb6d50004
 ctrladdr_CPU_new_sched  : 0xb6d50008
 ctrladdr_PRU_ack_sched  : 0xb6d5000c
 ctrladdr_CPU_new_period    : 0xb6d50010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d50014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d50018
 ctrladdr_SAMPLE_NUM        : 0xb6d5001c
 ctrladdr_cycle_count_req   : 0xb6d50020
 ctrladdr_cycle_count        : 0xb6d50024
 addr_cpu_data_buf : 0xb6d50028
 addr_pru_data_buf : 0xb6d50428
 addr_cpu_cmd_buf  : 0xb6d50828
 addr_pru_cmd_buf  : 0xb6d50a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055722 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 336.92977646659563)
Current local time and date: Mon Mar 13 12:02:47 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cdd000
 ctrladdr_CPU_wants_data : 0xb6cdd000
 ctrladdr_PRU_data_ready : 0xb6cdd004
 ctrladdr_CPU_new_sched  : 0xb6cdd008
 ctrladdr_PRU_ack_sched  : 0xb6cdd00c
 ctrladdr_CPU_new_period    : 0xb6cdd010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cdd014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cdd018
 ctrladdr_SAMPLE_NUM        : 0xb6cdd01c
 ctrladdr_cycle_count_req   : 0xb6cdd020
 ctrladdr_cycle_count        : 0xb6cdd024
 addr_cpu_data_buf : 0xb6cdd028
 addr_pru_data_buf : 0xb6cdd428
 addr_cpu_cmd_buf  : 0xb6cdd828
 addr_pru_cmd_buf  : 0xb6cdda28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056278 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 150.36849874989073)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:02:51 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d86000
 ctrladdr_CPU_wants_data : 0xb6d86000
 ctrladdr_PRU_data_ready : 0xb6d86004
 ctrladdr_CPU_new_sched  : 0xb6d86008
 ctrladdr_PRU_ack_sched  : 0xb6d8600c
 ctrladdr_CPU_new_period    : 0xb6d86010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d86014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d86018
 ctrladdr_SAMPLE_NUM        : 0xb6d8601c
 ctrladdr_cycle_count_req   : 0xb6d86020
 ctrladdr_cycle_count        : 0xb6d86024
 addr_cpu_data_buf : 0xb6d86028
 addr_pru_data_buf : 0xb6d86428
 addr_cpu_cmd_buf  : 0xb6d86828
 addr_pru_cmd_buf  : 0xb6d86a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000724 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 131.66592701237843)
Current local time and date: Mon Mar 13 12:02:55 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d4b000
 ctrladdr_CPU_wants_data : 0xb6d4b000
 ctrladdr_PRU_data_ready : 0xb6d4b004
 ctrladdr_CPU_new_sched  : 0xb6d4b008
 ctrladdr_PRU_ack_sched  : 0xb6d4b00c
 ctrladdr_CPU_new_period    : 0xb6d4b010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d4b014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d4b018
 ctrladdr_SAMPLE_NUM        : 0xb6d4b01c
 ctrladdr_cycle_count_req   : 0xb6d4b020
 ctrladdr_cycle_count        : 0xb6d4b024
 addr_cpu_data_buf : 0xb6d4b028
 addr_pru_data_buf : 0xb6d4b428
 addr_cpu_cmd_buf  : 0xb6d4b828
 addr_pru_cmd_buf  : 0xb6d4ba28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000738 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 119.96243386059326)
('===========================niter,dp,sum(dp):', 0, [0.00037392816802985505, 0.0002503155504993245, 6.118824567761266e-06], 0.0006303625430969408)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000001, -0.056000000000000015, -0.0007312199999999995])
Current local time and date: Mon Mar 13 12:02:58 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d5e000
 ctrladdr_CPU_wants_data : 0xb6d5e000
 ctrladdr_PRU_data_ready : 0xb6d5e004
 ctrladdr_CPU_new_sched  : 0xb6d5e008
 ctrladdr_PRU_ack_sched  : 0xb6d5e00c
 ctrladdr_CPU_new_period    : 0xb6d5e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d5e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d5e018
 ctrladdr_SAMPLE_NUM        : 0xb6d5e01c
 ctrladdr_cycle_count_req   : 0xb6d5e020
 ctrladdr_cycle_count        : 0xb6d5e024
 addr_cpu_data_buf : 0xb6d5e028
 addr_pru_data_buf : 0xb6d5e428
 addr_cpu_cmd_buf  : 0xb6d5e828
 addr_pru_cmd_buf  : 0xb6d5ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097361 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 113.68412411724304)
Current local time and date: Mon Mar 13 12:03:02 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d9d000
 ctrladdr_CPU_wants_data : 0xb6d9d000
 ctrladdr_PRU_data_ready : 0xb6d9d004
 ctrladdr_CPU_new_sched  : 0xb6d9d008
 ctrladdr_PRU_ack_sched  : 0xb6d9d00c
 ctrladdr_CPU_new_period    : 0xb6d9d010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d9d014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d9d018
 ctrladdr_SAMPLE_NUM        : 0xb6d9d01c
 ctrladdr_cycle_count_req   : 0xb6d9d020
 ctrladdr_cycle_count        : 0xb6d9d024
 addr_cpu_data_buf : 0xb6d9d028
 addr_pru_data_buf : 0xb6d9d428
 addr_cpu_cmd_buf  : 0xb6d9d828
 addr_pru_cmd_buf  : 0xb6d9da28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098109 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 130.77295185537318)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.056000000000000015, -0.0007312199999999995])
Current local time and date: Mon Mar 13 12:03:06 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d59000
 ctrladdr_CPU_wants_data : 0xb6d59000
 ctrladdr_PRU_data_ready : 0xb6d59004
 ctrladdr_CPU_new_sched  : 0xb6d59008
 ctrladdr_PRU_ack_sched  : 0xb6d5900c
 ctrladdr_CPU_new_period    : 0xb6d59010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d59014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d59018
 ctrladdr_SAMPLE_NUM        : 0xb6d5901c
 ctrladdr_cycle_count_req   : 0xb6d59020
 ctrladdr_cycle_count        : 0xb6d59024
 addr_cpu_data_buf : 0xb6d59028
 addr_pru_data_buf : 0xb6d59428
 addr_cpu_cmd_buf  : 0xb6d59828
 addr_pru_cmd_buf  : 0xb6d59a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055750 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 115.21500837260888)
Current local time and date: Mon Mar 13 12:03:10 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d76000
 ctrladdr_CPU_wants_data : 0xb6d76000
 ctrladdr_PRU_data_ready : 0xb6d76004
 ctrladdr_CPU_new_sched  : 0xb6d76008
 ctrladdr_PRU_ack_sched  : 0xb6d7600c
 ctrladdr_CPU_new_period    : 0xb6d76010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d76014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d76018
 ctrladdr_SAMPLE_NUM        : 0xb6d7601c
 ctrladdr_cycle_count_req   : 0xb6d76020
 ctrladdr_cycle_count        : 0xb6d76024
 addr_cpu_data_buf : 0xb6d76028
 addr_pru_data_buf : 0xb6d76428
 addr_cpu_cmd_buf  : 0xb6d76828
 addr_pru_cmd_buf  : 0xb6d76a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056250 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 245.59164165506613)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.05600000000000001, -0.0007312199999999995])
Current local time and date: Mon Mar 13 12:03:14 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cde000
 ctrladdr_CPU_wants_data : 0xb6cde000
 ctrladdr_PRU_data_ready : 0xb6cde004
 ctrladdr_CPU_new_sched  : 0xb6cde008
 ctrladdr_PRU_ack_sched  : 0xb6cde00c
 ctrladdr_CPU_new_period    : 0xb6cde010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cde014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cde018
 ctrladdr_SAMPLE_NUM        : 0xb6cde01c
 ctrladdr_cycle_count_req   : 0xb6cde020
 ctrladdr_cycle_count        : 0xb6cde024
 addr_cpu_data_buf : 0xb6cde028
 addr_pru_data_buf : 0xb6cde428
 addr_cpu_cmd_buf  : 0xb6cde828
 addr_pru_cmd_buf  : 0xb6cdea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000725 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 120.24688237178005)
Current local time and date: Mon Mar 13 12:03:17 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d6e000
 ctrladdr_CPU_wants_data : 0xb6d6e000
 ctrladdr_PRU_data_ready : 0xb6d6e004
 ctrladdr_CPU_new_sched  : 0xb6d6e008
 ctrladdr_PRU_ack_sched  : 0xb6d6e00c
 ctrladdr_CPU_new_period    : 0xb6d6e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d6e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d6e018
 ctrladdr_SAMPLE_NUM        : 0xb6d6e01c
 ctrladdr_cycle_count_req   : 0xb6d6e020
 ctrladdr_cycle_count        : 0xb6d6e024
 addr_cpu_data_buf : 0xb6d6e028
 addr_pru_data_buf : 0xb6d6e428
 addr_cpu_cmd_buf  : 0xb6d6e828
 addr_pru_cmd_buf  : 0xb6d6ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056000 kd: -0.000737 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 342.29861905444051)
('===========================niter,dp,sum(dp):', 0, [0.00033653535122686953, 0.00022528399544939206, 5.506942110985139e-06], 0.0005673262887872467)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000002, -0.05600000000000001, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:03:21 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cd4000
 ctrladdr_CPU_wants_data : 0xb6cd4000
 ctrladdr_PRU_data_ready : 0xb6cd4004
 ctrladdr_CPU_new_sched  : 0xb6cd4008
 ctrladdr_PRU_ack_sched  : 0xb6cd400c
 ctrladdr_CPU_new_period    : 0xb6cd4010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cd4014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cd4018
 ctrladdr_SAMPLE_NUM        : 0xb6cd401c
 ctrladdr_cycle_count_req   : 0xb6cd4020
 ctrladdr_cycle_count        : 0xb6cd4024
 addr_cpu_data_buf : 0xb6cd4028
 addr_pru_data_buf : 0xb6cd4428
 addr_cpu_cmd_buf  : 0xb6cd4828
 addr_pru_cmd_buf  : 0xb6cd4a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097399 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 135.82274704378639)
Current local time and date: Mon Mar 13 12:03:25 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d8e000
 ctrladdr_CPU_wants_data : 0xb6d8e000
 ctrladdr_PRU_data_ready : 0xb6d8e004
 ctrladdr_CPU_new_sched  : 0xb6d8e008
 ctrladdr_PRU_ack_sched  : 0xb6d8e00c
 ctrladdr_CPU_new_period    : 0xb6d8e010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d8e014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d8e018
 ctrladdr_SAMPLE_NUM        : 0xb6d8e01c
 ctrladdr_cycle_count_req   : 0xb6d8e020
 ctrladdr_cycle_count        : 0xb6d8e024
 addr_cpu_data_buf : 0xb6d8e028
 addr_pru_data_buf : 0xb6d8e428
 addr_cpu_cmd_buf  : 0xb6d8e828
 addr_pru_cmd_buf  : 0xb6d8ea28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.098072 ki: -0.056000 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 159.39030578616902)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000004, -0.05600000000000001, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:03:29 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6cf2000
 ctrladdr_CPU_wants_data : 0xb6cf2000
 ctrladdr_PRU_data_ready : 0xb6cf2004
 ctrladdr_CPU_new_sched  : 0xb6cf2008
 ctrladdr_PRU_ack_sched  : 0xb6cf200c
 ctrladdr_CPU_new_period    : 0xb6cf2010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6cf2014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6cf2018
 ctrladdr_SAMPLE_NUM        : 0xb6cf201c
 ctrladdr_cycle_count_req   : 0xb6cf2020
 ctrladdr_cycle_count        : 0xb6cf2024
 addr_cpu_data_buf : 0xb6cf2028
 addr_pru_data_buf : 0xb6cf2428
 addr_cpu_cmd_buf  : 0xb6cf2828
 addr_pru_cmd_buf  : 0xb6cf2a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.055775 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('-----------------------------err:', 267.29721880018161)
Current local time and date: Mon Mar 13 12:03:33 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d4f000
 ctrladdr_CPU_wants_data : 0xb6d4f000
 ctrladdr_PRU_data_ready : 0xb6d4f004
 ctrladdr_CPU_new_sched  : 0xb6d4f008
 ctrladdr_PRU_ack_sched  : 0xb6d4f00c
 ctrladdr_CPU_new_period    : 0xb6d4f010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d4f014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d4f018
 ctrladdr_SAMPLE_NUM        : 0xb6d4f01c
 ctrladdr_cycle_count_req   : 0xb6d4f020
 ctrladdr_cycle_count        : 0xb6d4f024
 addr_cpu_data_buf : 0xb6d4f028
 addr_pru_data_buf : 0xb6d4f428
 addr_cpu_cmd_buf  : 0xb6d4f828
 addr_pru_cmd_buf  : 0xb6d4fa28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...done.
kp: -0.097735 ki: -0.056225 kd: -0.000731 outfile: pid-fwd.txt pru outfile: pru-data.txt log: log.txt
pid-fwd22-arggains.c main (348): Stopped hw.
Writing data to pid-fwd.txt...
NOTE: NOT WRITING PRU (for speeding up twiddle)
pid-fwd22-arggains.c main (442): Bye!
('........................err:', 249.37478573520465)
('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gains:', [-0.09773513931000004, -0.056000000000000015, -0.0007312199999999997])
Current local time and date: Mon Mar 13 12:03:36 2017
I am pid-fwd22-arggains.c main (79).
USING PRU!
pid-fwd22-arggains.c main (84): HEY IDIOT, sysfs pwm goes out P9_34 but PRU pwm goes out P8_27. 
Make sure your wiring reflects this!
Log file: log.txt
Starting PRU...
Welcome to the Beaglebone PRU library for real-time controls!
NOTE: if you get a seg fault, make sure the jppprugpio device tree overlay has been loaded!!
Here's the cmd: root@beaglebone# echo jppprugpio > /sys/devices/bone_capemgr.9/slots
Assumes you have jppprugpio-00A0.dto in /lib/firmware
Also do this:
echo bone_eqep1 > $SLOTS
Resetting EQEP  to 0...
Found EQEP sysid entry. Resetting eqep...
prussdrv_init() (returned 0)
prussdrv_open (returned 0)
prussdrv_pruintc_init (returned 0)
pruss_map_prumem (returned 0)
pru0 data memory addr: 0xb6d77000
 ctrladdr_CPU_wants_data : 0xb6d77000
 ctrladdr_PRU_data_ready : 0xb6d77004
 ctrladdr_CPU_new_sched  : 0xb6d77008
 ctrladdr_PRU_ack_sched  : 0xb6d7700c
 ctrladdr_CPU_new_period    : 0xb6d77010
 ctrladdr_SAMPLE_PERIOD_CMD : 0xb6d77014
 ctrladdr_SAMPLE_NUM_LOCK   : 0xb6d77018
 ctrladdr_SAMPLE_NUM        : 0xb6d7701c
 ctrladdr_cycle_count_req   : 0xb6d77020
 ctrladdr_cycle_count        : 0xb6d77024
 addr_cpu_data_buf : 0xb6d77028
 addr_pru_data_buf : 0xb6d77428
 addr_cpu_cmd_buf  : 0xb6d77828
 addr_pru_cmd_buf  : 0xb6d77a28
executing bin file: ./jpp-pru-lib.bin
NOTE: a lot of stuff assumes PRU0 in this lib, sry.
prussdrv_exec_program returned 0
Waiting 1000ms to let PRU fill its internal buffer...  C-c C-cTraceback (most recent call last):
  File "twiddle.py", line 61, in <module>
    err = run(p)
  File "twiddle.py", line 25, in run
    call(['./pid-fwd22-arggains',str(p[0]),str(p[1]),str(p[2])])
  File "/usr/lib/python2.7/subprocess.py", line 493, in call
    return Popen(*popenargs, **kwargs).wait()
  File "/usr/lib/python2.7/subprocess.py", line 1301, in wait
    pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0)
  File "/usr/lib/python2.7/subprocess.py", line 478, in _eintr_retry_call
    return func(*args)
KeyboardInterrupt
2017-03-13 12:03:37 [root@beaglebone /home/debian/Beaglebone-Lil-Motor-C-Lib/06-pid-with-fwd-horizon] 
# 
